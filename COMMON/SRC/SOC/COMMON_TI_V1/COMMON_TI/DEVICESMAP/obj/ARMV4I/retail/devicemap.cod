; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\DEVICESMAP\devicemap.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|GetAddressByDevice|
	IMPORT	|s_DeviceAddressMap|
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\devicesmap\devicemap.c

  00000			 AREA	 |.pdata|, PDATA
|$T43141| DCD	|$LN12@GetAddress|
	DCD	0x40001401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GetAddressByDevice| PROC

; 24   : {

  00000		 |$LN12@GetAddress|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M43138|
  00004	e1a0e000	 mov         lr, r0

; 25   :     UINT32 Addr = 0;
; 26   :     DWORD i=0;
; 27   :     
; 28   :     while (s_DeviceAddressMap[i].device != OMAP_DEVICE_NONE)

  00008	e59f103c	 ldr         r1, [pc, #0x3C]
  0000c	e3a00000	 mov         r0, #0
  00010	e3a02000	 mov         r2, #0
  00014	e5913004	 ldr         r3, [r1, #4]
  00018	ea000004	 b           |$LN9@GetAddress|
  0001c		 |$LL3@GetAddress|

; 29   :     {   
; 30   :         if (s_DeviceAddressMap[i].device == dev)

  0001c	e153000e	 cmp         r3, lr
  00020	0a000006	 beq         |$LN7@GetAddress|

; 33   :             break;
; 34   :         }
; 35   :         i++;

  00024	e2822001	 add         r2, r2, #1
  00028	e0813182	 add         r3, r1, r2, lsl #3
  0002c	e5933004	 ldr         r3, [r3, #4]
  00030		 |$LN9@GetAddress|
  00030	e3730001	 cmn         r3, #1
  00034	1afffff8	 bne         |$LL3@GetAddress|

; 36   :     }
; 37   :     return Addr;
; 38   : }

  00038	e49de004	 ldr         lr, [sp], #4
  0003c	e12fff1e	 bx          lr
  00040		 |$LN7@GetAddress|

; 31   :         {
; 32   :             Addr = s_DeviceAddressMap[i].deviceAddress;

  00040	e7910182	 ldr         r0, [r1, +r2, lsl #3]

; 36   :     }
; 37   :     return Addr;
; 38   : }

  00044	e49de004	 ldr         lr, [sp], #4
  00048	e12fff1e	 bx          lr
  0004c		 |$LN13@GetAddress|
  0004c		 |$LN14@GetAddress|
  0004c	00000000	 DCD         |s_DeviceAddressMap|
  00050		 |$M43139|

			 ENDP  ; |GetAddressByDevice|

	EXPORT	|GetDeviceByAddress|

  00000			 AREA	 |.pdata|, PDATA
|$T43158| DCD	|$LN11@GetDeviceB|
	DCD	0x40001901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GetDeviceByAddress| PROC

; 41   : {

  00000		 |$LN11@GetDeviceB|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M43155|
  00004	e1a04000	 mov         r4, r0

; 42   :     OMAP_DEVICE dev = 0;
; 43   :     DWORD i=0;
; 44   :     while (s_DeviceAddressMap[i].device != OMAP_DEVICE_NONE)

  00008	e59f2050	 ldr         r2, [pc, #0x50]
  0000c	e3a00000	 mov         r0, #0
  00010	e3a0e000	 mov         lr, #0
  00014	e5923004	 ldr         r3, [r2, #4]
  00018	e3730001	 cmn         r3, #1
  0001c	0a00000d	 beq         |$LN2@GetDeviceB|
  00020	e3a01000	 mov         r1, #0
  00024		 |$LL3@GetDeviceB|

; 45   :     {   
; 46   :         if (s_DeviceAddressMap[i].deviceAddress == addr)

  00024	e7913002	 ldr         r3, [r1, +r2]
  00028	e1530004	 cmp         r3, r4
  0002c	0a000007	 beq         |$LN7@GetDeviceB|

; 49   :             break;
; 50   :         }
; 51   :         i++;

  00030	e28ee001	 add         lr, lr, #1
  00034	e1a0118e	 mov         r1, lr, lsl #3
  00038	e0813002	 add         r3, r1, r2
  0003c	e5933004	 ldr         r3, [r3, #4]
  00040	e3730001	 cmn         r3, #1
  00044	1afffff6	 bne         |$LL3@GetDeviceB|

; 52   :     }
; 53   :     return dev;
; 54   : }

  00048	e8bd4010	 ldmia       sp!, {r4, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$LN7@GetDeviceB|

; 47   :         {
; 48   :             dev = s_DeviceAddressMap[i].device;

  00050	e082318e	 add         r3, r2, lr, lsl #3
  00054	e5930004	 ldr         r0, [r3, #4]
  00058		 |$LN2@GetDeviceB|

; 52   :     }
; 53   :     return dev;
; 54   : }

  00058	e8bd4010	 ldmia       sp!, {r4, lr}
  0005c	e12fff1e	 bx          lr
  00060		 |$LN12@GetDeviceB|
  00060		 |$LN13@GetDeviceB|
  00060	00000000	 DCD         |s_DeviceAddressMap|
  00064		 |$M43156|

			 ENDP  ; |GetDeviceByAddress|

	EXPORT	|GetIrqByDevice|
	IMPORT	|s_DeviceIrqMap|
	IMPORT	|wcscmp|

  00000			 AREA	 |.pdata|, PDATA
|$T43178| DCD	|$LN16@GetIrqByDe|
	DCD	0x40002301
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GetIrqByDevice| PROC

; 58   : {

  00000		 |$LN16@GetIrqByDe|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004		 |$M43175|
  00004	e1a07001	 mov         r7, r1
  00008	e1a08000	 mov         r8, r0

; 59   :     UINT32 irq = (UINT32) -1;
; 60   :     DWORD i=0;
; 61   :     while (s_DeviceIrqMap[i].device != OMAP_DEVICE_NONE)

  0000c	e59f5074	 ldr         r5, [pc, #0x74]
  00010	e3e06000	 mvn         r6, #0
  00014	e3a04000	 mov         r4, #0
  00018	e5953004	 ldr         r3, [r5, #4]
  0001c	e3730001	 cmn         r3, #1
  00020	0a000015	 beq         |$LN13@GetIrqByDe|
  00024	e1a02005	 mov         r2, r5
  00028		 |$LL7@GetIrqByDe|

; 62   :     {   
; 63   :         if (s_DeviceIrqMap[i].device == dev)

  00028	e1530008	 cmp         r3, r8
  0002c	1a000009	 bne         |$LN2@GetIrqByDe|

; 64   :         {
; 65   :             BOOL bFound = TRUE;
; 66   : 
; 67   :             //If we extra information, then we will check that the extra information match
; 68   :             if (s_DeviceIrqMap[i].extra)                 

  00030	e5923008	 ldr         r3, [r2, #8]
  00034	e3530000	 cmp         r3, #0
  00038	0a00000d	 beq         |$LN11@GetIrqByDe|

; 69   :             {
; 70   :                 if ((extra==NULL) || wcscmp(extra,s_DeviceIrqMap[i].extra))

  0003c	e3570000	 cmp         r7, #0
  00040	0a000004	 beq         |$LN2@GetIrqByDe|
  00044	e1a01003	 mov         r1, r3
  00048	e1a00007	 mov         r0, r7
  0004c	eb000000	 bl          wcscmp
  00050	e3500000	 cmp         r0, #0
  00054	0a000006	 beq         |$LN11@GetIrqByDe|
  00058		 |$LN2@GetIrqByDe|

; 79   :                 break;
; 80   :             }
; 81   :             
; 82   :         }
; 83   :         i++;

  00058	e2844001	 add         r4, r4, #1
  0005c	e0843084	 add         r3, r4, r4, lsl #1
  00060	e0852103	 add         r2, r5, r3, lsl #2
  00064	e5923004	 ldr         r3, [r2, #4]
  00068	e3730001	 cmn         r3, #1
  0006c	1affffed	 bne         |$LL7@GetIrqByDe|
  00070	ea000001	 b           |$LN13@GetIrqByDe|
  00074		 |$LN11@GetIrqByDe|

; 71   :                 {
; 72   :                     bFound = FALSE;
; 73   :                 }
; 74   :             }
; 75   : 
; 76   :             if (bFound)
; 77   :             {
; 78   :                 irq = s_DeviceIrqMap[i].irq;

  00074	e0843084	 add         r3, r4, r4, lsl #1
  00078	e7956103	 ldr         r6, [r5, +r3, lsl #2]
  0007c		 |$LN13@GetIrqByDe|

; 84   :     }
; 85   :     return irq;
; 86   : }

  0007c	e1a00006	 mov         r0, r6
  00080	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  00084	e12fff1e	 bx          lr
  00088		 |$LN17@GetIrqByDe|
  00088		 |$LN18@GetIrqByDe|
  00088	00000000	 DCD         |s_DeviceIrqMap|
  0008c		 |$M43176|

			 ENDP  ; |GetIrqByDevice|

	EXPORT	|GetDeviceByIrq|

  00000			 AREA	 |.pdata|, PDATA
|$T43194| DCD	|$LN10@GetDeviceB@2|
	DCD	0x40001501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GetDeviceByIrq| PROC

; 89   : {

  00000		 |$LN10@GetDeviceB@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M43191|
  00004	e1a04000	 mov         r4, r0

; 90   : 	DWORD devID = OMAP_DEVICE_NONE;
; 91   :     DWORD i=0;
; 92   : 
; 93   : 	while (s_DeviceIrqMap[i].irq != 0)

  00008	e59f1040	 ldr         r1, [pc, #0x40]
  0000c	e3e00000	 mvn         r0, #0
  00010	e3a0e000	 mov         lr, #0
  00014	e5913000	 ldr         r3, [r1]
  00018	e3530000	 cmp         r3, #0
  0001c	0a000009	 beq         |$LN2@GetDeviceB@2|
  00020	e3a02000	 mov         r2, #0
  00024		 |$LL3@GetDeviceB@2|

; 94   :     {   
; 95   :         if (s_DeviceIrqMap[i].irq == irq)

  00024	e1530004	 cmp         r3, r4

; 96   :         {
; 97   : 			devID = s_DeviceIrqMap[i].device;

  00028	00823001	 addeq       r3, r2, r1
  0002c	05930004	 ldreq       r0, [r3, #4]

; 98   :         }
; 99   :         i++;

  00030	e28ee001	 add         lr, lr, #1
  00034	e08e308e	 add         r3, lr, lr, lsl #1
  00038	e1a02103	 mov         r2, r3, lsl #2
  0003c	e7923001	 ldr         r3, [r2, +r1]
  00040	e3530000	 cmp         r3, #0
  00044	1afffff6	 bne         |$LL3@GetDeviceB@2|
  00048		 |$LN2@GetDeviceB@2|

; 100  :     }
; 101  : 
; 102  :     return devID;
; 103  : }

  00048	e8bd4010	 ldmia       sp!, {r4, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$LN11@GetDeviceB@2|
  00050		 |$LN12@GetDeviceB@2|
  00050	00000000	 DCD         |s_DeviceIrqMap|
  00054		 |$M43192|

			 ENDP  ; |GetDeviceByIrq|

	END
