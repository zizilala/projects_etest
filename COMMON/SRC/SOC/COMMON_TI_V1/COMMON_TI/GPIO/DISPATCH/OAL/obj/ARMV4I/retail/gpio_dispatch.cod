; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\GPIO\DISPATCH\OAL\gpio_dispatch.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\gpio\dispatch\oal\gpio_dispatch.c

  00000			 AREA	 |.pdata|, PDATA
|$T43603| DCD	|$LN11@GetGroupBy|
	DCD	0x40001301
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GetGroupByID| PROC

; 11   : {    

  00000		 |$LN11@GetGroupBy|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M43600|

; 12   :     int i=0;
; 13   :     while (pDevice->rgRanges[i] <= id)

  00004	e5904008	 ldr         r4, [r0, #8]
  00008	e3a0e000	 mov         lr, #0
  0000c	e5943000	 ldr         r3, [r4]
  00010	e1530001	 cmp         r3, r1
  00014	8a000007	 bhi         |$LN8@GetGroupBy|
  00018	e5900004	 ldr         r0, [r0, #4]
  0001c		 |$LL3@GetGroupBy|

; 14   :     {
; 15   :         i++;

  0001c	e28ee001	 add         lr, lr, #1

; 16   :         if (i >= pDevice->nbGpioGrp)

  00020	e15e0000	 cmp         lr, r0
  00024	e2844004	 add         r4, r4, #4
  00028	aa000002	 bge         |$LN8@GetGroupBy|
  0002c	e5943000	 ldr         r3, [r4]
  00030	e1530001	 cmp         r3, r1
  00034	9afffff8	 bls         |$LL3@GetGroupBy|
  00038		 |$LN8@GetGroupBy|

; 17   :         {
; 18   :             break;
; 19   :         }
; 20   :     }    
; 21   :     *pGrp = i-1;

  00038	e24e3001	 sub         r3, lr, #1
  0003c	e5823000	 str         r3, [r2]

; 22   :     return TRUE;

  00040	e3a00001	 mov         r0, #1

; 23   : } 

  00044	e8bd4010	 ldmia       sp!, {r4, lr}
  00048	e12fff1e	 bx          lr
  0004c		 |$M43601|

			 ENDP  ; |GetGroupByID|

	EXPORT	|GPIOPostInit|
	IMPORT	|BSPGetGpioDevicesTable|

  00000			 AREA	 |.pdata|, PDATA
|$T43618| DCD	|$LN14@GPIOPostIn|
	DCD	0x40001c01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GPIOPostInit| PROC

; 26   : {

  00000		 |$LN14@GPIOPostIn|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M43615|

; 27   :     int i;
; 28   :     GpioDevice_t* pDevice;
; 29   :     pDevice= BSPGetGpioDevicesTable(); // Z2170p\SRC\BSP_COMMON\BSPCFG\bspcfg.c

  00004	eb000000	 bl          BSPGetGpioDevicesTable
  00008	e1a05000	 mov         r5, r0

; 30   :     for (i = 0; i < pDevice->nbGpioGrp; ++i)

  0000c	e5953004	 ldr         r3, [r5, #4]
  00010	e3a04000	 mov         r4, #0
  00014	e3530000	 cmp         r3, #0
  00018	da00000e	 ble         |$LN11@GPIOPostIn|
  0001c		 |$LL5@GPIOPostIn|

; 31   :     {   
; 32   :         if (pDevice->rgGpioTbls[i]->pfnPostInit)

  0001c	e5953010	 ldr         r3, [r5, #0x10]
  00020	e7933104	 ldr         r3, [r3, +r4, lsl #2]
  00024	e5933008	 ldr         r3, [r3, #8]
  00028	e1b02003	 movs        r2, r3
  0002c	0a000005	 beq         |$LN4@GPIOPostIn|

; 33   :         {
; 34   :             if (pDevice->rgGpioTbls[i]->pfnPostInit(pDevice->rgHandles[i]) == FALSE)

  00030	e595300c	 ldr         r3, [r5, #0xC]
  00034	e7930104	 ldr         r0, [r3, +r4, lsl #2]
  00038	e1a0e00f	 mov         lr, pc
  0003c	e12fff12	 bx          r2
  00040	e3500000	 cmp         r0, #0
  00044	0a000006	 beq         |$LN9@GPIOPostIn|
  00048		 |$LN4@GPIOPostIn|

; 30   :     for (i = 0; i < pDevice->nbGpioGrp; ++i)

  00048	e5953004	 ldr         r3, [r5, #4]
  0004c	e2844001	 add         r4, r4, #1
  00050	e1540003	 cmp         r4, r3
  00054	bafffff0	 blt         |$LL5@GPIOPostIn|
  00058		 |$LN11@GPIOPostIn|

; 37   :             }
; 38   :         }
; 39   :     }
; 40   :     return TRUE;

  00058	e3a00001	 mov         r0, #1

; 41   : }

  0005c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00060	e12fff1e	 bx          lr
  00064		 |$LN9@GPIOPostIn|

; 35   :             {
; 36   :                 return FALSE;

  00064	e3a00000	 mov         r0, #0

; 41   : }

  00068	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0006c	e12fff1e	 bx          lr
  00070		 |$M43616|

			 ENDP  ; |GPIOPostInit|

	EXPORT	|GPIOInit|
	EXPORT	|??_C@_1HK@FIHOCGBD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAG?$AAI?$AAO?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_19NNFDHLJH@?$AAb?$AAo?$AAo?$AAt?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|NKDbgPrintfW|
	IMPORT	|BSPGpioInit|

  00000			 AREA	 |.pdata|, PDATA
|$T43632| DCD	|$LN12@GPIOInit|
	DCD	0x40002602

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HK@FIHOCGBD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAG?$AAI?$AAO?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "G", 0x0, "I", 0x0, "O", 0x0, "_", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z", 0x0, "e"
	DCB	0x0, " ", 0x0, "G", 0x0, "p", 0x0, "i", 0x0, "o", 0x0, " "
	DCB	0x0, "t", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e", 0x0, " "
	DCB	0x0, "i", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "x", 0x0, "("
	DCB	0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_19NNFDHLJH@?$AAb?$AAo?$AAo?$AAt?$AA?$AA@| DCB "b", 0x0, "o", 0x0, "o"
	DCB	0x0, "t", 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GPIOInit| PROC

; 44   : {

  00000		 |$LN12@GPIOInit|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M43629|

; 45   :     int i;
; 46   :     UINT size;
; 47   :     GpioDevice_t* pDevice;
; 48   :     HANDLE hGpio;
; 49   : 
; 50   :     BSPGpioInit();

  00008	eb000000	 bl          BSPGpioInit

; 51   :     pDevice= BSPGetGpioDevicesTable();

  0000c	eb000000	 bl          BSPGetGpioDevicesTable
  00010	e1a05000	 mov         r5, r0

; 52   :     // setup range and get handles
; 53   :     for (i = 0; i < pDevice->nbGpioGrp; ++i)

  00014	e5953004	 ldr         r3, [r5, #4]
  00018	e3a04000	 mov         r4, #0
  0001c	e3530000	 cmp         r3, #0
  00020	da000011	 ble         |$LN2@GPIOInit|
  00024		 |$LL4@GPIOInit|

; 54   :     {
; 55   :         if (pDevice->rgGpioTbls[i]->pfnInit(L"boot", &hGpio, &size) == FALSE)

  00024	e5953010	 ldr         r3, [r5, #0x10]
  00028	e1a06104	 mov         r6, r4, lsl #2
  0002c	e59f0060	 ldr         r0, [pc, #0x60]
  00030	e7963003	 ldr         r3, [r6, +r3]
  00034	e28d2004	 add         r2, sp, #4
  00038	e28d1000	 add         r1, sp, #0
  0003c	e5933004	 ldr         r3, [r3, #4]
  00040	e1a0e00f	 mov         lr, pc
  00044	e12fff13	 bx          r3
  00048	e3500000	 cmp         r0, #0
  0004c	0a00000a	 beq         |$LN8@GPIOInit|

; 58   :             goto cleanUp;
; 59   :         }
; 60   :         pDevice->rgHandles[i] = hGpio;

  00050	e595200c	 ldr         r2, [r5, #0xC]
  00054	e59d3000	 ldr         r3, [sp]
  00058	e2844001	 add         r4, r4, #1
  0005c	e7863002	 str         r3, [r6, +r2]
  00060	e5953004	 ldr         r3, [r5, #4]
  00064	e1540003	 cmp         r4, r3
  00068	baffffed	 blt         |$LL4@GPIOInit|
  0006c		 |$LN2@GPIOInit|

; 61   :     }
; 62   :     return TRUE;

  0006c	e3a00001	 mov         r0, #1
  00070		 |$LN5@GPIOInit|

; 67   : }

  00070	e28dd008	 add         sp, sp, #8
  00074	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00078	e12fff1e	 bx          lr
  0007c		 |$LN8@GPIOInit|

; 56   :         {
; 57   :             RETAILMSG(ZONE_ERROR, (L"ERROR: GIO_Init: Failed to initialize Gpio table index(%d)\r\n", i));

  0007c	e59f000c	 ldr         r0, [pc, #0xC]
  00080	e1a01004	 mov         r1, r4
  00084	eb000000	 bl          NKDbgPrintfW

; 63   :     
; 64   : cleanUp:
; 65   : 
; 66   :     return FALSE;

  00088	e3a00000	 mov         r0, #0
  0008c		 |$cleanUp$43433|
  0008c	eafffff7	 b           |$LN5@GPIOInit|
  00090		 |$LN13@GPIOInit|
  00090		 |$LN14@GPIOInit|
  00090	00000000	 DCD         |??_C@_1HK@FIHOCGBD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAG?$AAI?$AAO?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi@|
  00094		 |$LN15@GPIOInit|
  00094	00000000	 DCD         |??_C@_19NNFDHLJH@?$AAb?$AAo?$AAo?$AAt?$AA?$AA@|
  00098		 |$M43630|

			 ENDP  ; |GPIOInit|

	EXPORT	|GPIOOpen|

  00000			 AREA	 |.pdata|, PDATA
|$T43644| DCD	|$LN5@GPIOOpen|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GPIOOpen| PROC

; 70   : {

  00000		 |$LN5@GPIOOpen|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M43641|

; 71   :    return BSPGetGpioDevicesTable();

  00004	eb000000	 bl          BSPGetGpioDevicesTable

; 72   : }

  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M43642|

			 ENDP  ; |GPIOOpen|

	EXPORT	|GPIOClose|

  00000			 AREA	 |.pdata|, PDATA
|$T43651| DCD	|$LN5@GPIOClose|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GPIOClose| PROC

; 75   : {

  00000		 |$LN5@GPIOClose|
  00000		 |$M43648|

; 76   :     UNREFERENCED_PARAMETER(hContext);
; 77   : }

  00000	e12fff1e	 bx          lr
  00004		 |$M43649|

			 ENDP  ; |GPIOClose|

	EXPORT	|GPIOSetBit|

  00000			 AREA	 |.pdata|, PDATA
|$T43661| DCD	|$LN6@GPIOSetBit|
	DCD	0x40001602
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GPIOSetBit| PROC

; 80   : {

  00000		 |$LN6@GPIOSetBit|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M43658|
  00008	e1a06001	 mov         r6, r1
  0000c	e1a05000	 mov         r5, r0

; 81   :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;
; 82   :     int grp;
; 83   :     if (GetGroupByID(pDevice,id,&grp))

  00010	e28d2000	 add         r2, sp, #0
  00014	eb000000	 bl          GetGroupByID
  00018	e3500000	 cmp         r0, #0
  0001c	0a00000a	 beq         |$LN1@GPIOSetBit|

; 84   :     {
; 85   :         pDevice->rgGpioTbls[grp]->pfnSetBit(pDevice->rgHandles[grp], id - pDevice->rgRanges[grp]);

  00020	e5953010	 ldr         r3, [r5, #0x10]
  00024	e595e008	 ldr         lr, [r5, #8]
  00028	e59d4000	 ldr         r4, [sp]
  0002c	e595200c	 ldr         r2, [r5, #0xC]
  00030	e7933104	 ldr         r3, [r3, +r4, lsl #2]
  00034	e79ee104	 ldr         lr, [lr, +r4, lsl #2]
  00038	e7920104	 ldr         r0, [r2, +r4, lsl #2]
  0003c	e5933010	 ldr         r3, [r3, #0x10]
  00040	e046100e	 sub         r1, r6, lr
  00044	e1a0e00f	 mov         lr, pc
  00048	e12fff13	 bx          r3
  0004c		 |$LN1@GPIOSetBit|

; 86   :     }
; 87   : }

  0004c	e28dd004	 add         sp, sp, #4
  00050	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$M43659|

			 ENDP  ; |GPIOSetBit|

	EXPORT	|GPIOClrBit|

  00000			 AREA	 |.pdata|, PDATA
|$T43671| DCD	|$LN6@GPIOClrBit|
	DCD	0x40001602
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GPIOClrBit| PROC

; 90   : {

  00000		 |$LN6@GPIOClrBit|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M43668|
  00008	e1a06001	 mov         r6, r1
  0000c	e1a05000	 mov         r5, r0

; 91   :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;
; 92   :     int grp;
; 93   :     if (GetGroupByID(pDevice,id,&grp))

  00010	e28d2000	 add         r2, sp, #0
  00014	eb000000	 bl          GetGroupByID
  00018	e3500000	 cmp         r0, #0
  0001c	0a00000a	 beq         |$LN1@GPIOClrBit|

; 94   :     {
; 95   :         pDevice->rgGpioTbls[grp]->pfnClrBit(pDevice->rgHandles[grp], id - pDevice->rgRanges[grp]);

  00020	e5953010	 ldr         r3, [r5, #0x10]
  00024	e595e008	 ldr         lr, [r5, #8]
  00028	e59d4000	 ldr         r4, [sp]
  0002c	e595200c	 ldr         r2, [r5, #0xC]
  00030	e7933104	 ldr         r3, [r3, +r4, lsl #2]
  00034	e79ee104	 ldr         lr, [lr, +r4, lsl #2]
  00038	e7920104	 ldr         r0, [r2, +r4, lsl #2]
  0003c	e5933014	 ldr         r3, [r3, #0x14]
  00040	e046100e	 sub         r1, r6, lr
  00044	e1a0e00f	 mov         lr, pc
  00048	e12fff13	 bx          r3
  0004c		 |$LN1@GPIOClrBit|

; 96   :     }
; 97   : }

  0004c	e28dd004	 add         sp, sp, #4
  00050	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$M43669|

			 ENDP  ; |GPIOClrBit|

	EXPORT	|GPIOGetBit|

  00000			 AREA	 |.pdata|, PDATA
|$T43683| DCD	|$LN6@GPIOGetBit|
	DCD	0x40001802
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GPIOGetBit| PROC

; 100  : {

  00000		 |$LN6@GPIOGetBit|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M43680|
  00008	e1a06001	 mov         r6, r1
  0000c	e1a05000	 mov         r5, r0

; 101  :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;
; 102  :     int grp;
; 103  :     if (GetGroupByID(pDevice,id,&grp))

  00010	e28d2000	 add         r2, sp, #0
  00014	eb000000	 bl          GetGroupByID
  00018	e3500000	 cmp         r0, #0
  0001c	0a00000b	 beq         |$LN1@GPIOGetBit|

; 104  :     {
; 105  :         return pDevice->rgGpioTbls[grp]->pfnGetBit(pDevice->rgHandles[grp], id - pDevice->rgRanges[grp]);

  00020	e5953010	 ldr         r3, [r5, #0x10]
  00024	e595e008	 ldr         lr, [r5, #8]
  00028	e59d4000	 ldr         r4, [sp]
  0002c	e595200c	 ldr         r2, [r5, #0xC]
  00030	e7933104	 ldr         r3, [r3, +r4, lsl #2]
  00034	e79ee104	 ldr         lr, [lr, +r4, lsl #2]
  00038	e7920104	 ldr         r0, [r2, +r4, lsl #2]
  0003c	e5933018	 ldr         r3, [r3, #0x18]
  00040	e046100e	 sub         r1, r6, lr
  00044	e1a0e00f	 mov         lr, pc
  00048	e12fff13	 bx          r3
  0004c	ea000000	 b           |$LN2@GPIOGetBit|
  00050		 |$LN1@GPIOGetBit|

; 106  :     }
; 107  :     return (DWORD) -1;

  00050	e3e00000	 mvn         r0, #0
  00054		 |$LN2@GPIOGetBit|

; 108  : }

  00054	e28dd004	 add         sp, sp, #4
  00058	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  0005c	e12fff1e	 bx          lr
  00060		 |$M43681|

			 ENDP  ; |GPIOGetBit|

	EXPORT	|GPIOSetMode|

  00000			 AREA	 |.pdata|, PDATA
|$T43694| DCD	|$LN6@GPIOSetMod|
	DCD	0x40001802
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GPIOSetMode| PROC

; 111  : {

  00000		 |$LN6@GPIOSetMod|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M43691|
  00008	e1a07002	 mov         r7, r2
  0000c	e1a06001	 mov         r6, r1
  00010	e1a05000	 mov         r5, r0

; 112  :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;
; 113  :     int grp;
; 114  :     if (GetGroupByID(pDevice,id,&grp))

  00014	e28d2000	 add         r2, sp, #0
  00018	eb000000	 bl          GetGroupByID
  0001c	e3500000	 cmp         r0, #0
  00020	0a00000b	 beq         |$LN1@GPIOSetMod|

; 115  :     {
; 116  :         pDevice->rgGpioTbls[grp]->pfnSetMode((HANDLE) pDevice->rgHandles[grp], id - pDevice->rgRanges[grp], mode);

  00024	e5953010	 ldr         r3, [r5, #0x10]
  00028	e595e008	 ldr         lr, [r5, #8]
  0002c	e59d4000	 ldr         r4, [sp]
  00030	e595000c	 ldr         r0, [r5, #0xC]
  00034	e1a02007	 mov         r2, r7
  00038	e7933104	 ldr         r3, [r3, +r4, lsl #2]
  0003c	e79ee104	 ldr         lr, [lr, +r4, lsl #2]
  00040	e7900104	 ldr         r0, [r0, +r4, lsl #2]
  00044	e593301c	 ldr         r3, [r3, #0x1C]
  00048	e046100e	 sub         r1, r6, lr
  0004c	e1a0e00f	 mov         lr, pc
  00050	e12fff13	 bx          r3
  00054		 |$LN1@GPIOSetMod|

; 117  :     }
; 118  : }

  00054	e28dd004	 add         sp, sp, #4
  00058	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  0005c	e12fff1e	 bx          lr
  00060		 |$M43692|

			 ENDP  ; |GPIOSetMode|

	EXPORT	|GPIOGetMode|

  00000			 AREA	 |.pdata|, PDATA
|$T43706| DCD	|$LN6@GPIOGetMod|
	DCD	0x40001802
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GPIOGetMode| PROC

; 121  : {

  00000		 |$LN6@GPIOGetMod|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M43703|
  00008	e1a06001	 mov         r6, r1
  0000c	e1a05000	 mov         r5, r0

; 122  :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;
; 123  :     int grp;
; 124  :     if (GetGroupByID(pDevice,id,&grp))

  00010	e28d2000	 add         r2, sp, #0
  00014	eb000000	 bl          GetGroupByID
  00018	e3500000	 cmp         r0, #0
  0001c	0a00000b	 beq         |$LN1@GPIOGetMod|

; 125  :     {
; 126  :         return pDevice->rgGpioTbls[grp]->pfnGetMode((HANDLE) pDevice->rgHandles[grp], id - pDevice->rgRanges[grp]);        

  00020	e5953010	 ldr         r3, [r5, #0x10]
  00024	e595e008	 ldr         lr, [r5, #8]
  00028	e59d4000	 ldr         r4, [sp]
  0002c	e595200c	 ldr         r2, [r5, #0xC]
  00030	e7933104	 ldr         r3, [r3, +r4, lsl #2]
  00034	e79ee104	 ldr         lr, [lr, +r4, lsl #2]
  00038	e7920104	 ldr         r0, [r2, +r4, lsl #2]
  0003c	e5933020	 ldr         r3, [r3, #0x20]
  00040	e046100e	 sub         r1, r6, lr
  00044	e1a0e00f	 mov         lr, pc
  00048	e12fff13	 bx          r3
  0004c	ea000000	 b           |$LN2@GPIOGetMod|
  00050		 |$LN1@GPIOGetMod|

; 127  :     }
; 128  :     return (DWORD) -1;

  00050	e3e00000	 mvn         r0, #0
  00054		 |$LN2@GPIOGetMod|

; 129  : }

  00054	e28dd004	 add         sp, sp, #4
  00058	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  0005c	e12fff1e	 bx          lr
  00060		 |$M43704|

			 ENDP  ; |GPIOGetMode|

	EXPORT	|GPIOPullup|

  00000			 AREA	 |.pdata|, PDATA
|$T43719| DCD	|$LN6@GPIOPullup|
	DCD	0x40001902
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GPIOPullup| PROC

; 132  : {

  00000		 |$LN6@GPIOPullup|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M43716|
  00008	e1a07002	 mov         r7, r2
  0000c	e1a06001	 mov         r6, r1
  00010	e1a05000	 mov         r5, r0

; 133  :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;
; 134  :     int grp;
; 135  :     if (GetGroupByID(pDevice,id,&grp))

  00014	e28d2000	 add         r2, sp, #0
  00018	eb000000	 bl          GetGroupByID
  0001c	e3500000	 cmp         r0, #0
  00020	0a00000b	 beq         |$LN1@GPIOPullup|

; 136  :     {
; 137  :         pDevice->rgGpioTbls[grp]->pfnPullup((HANDLE) pDevice->rgHandles[grp], id - pDevice->rgRanges[grp], enable);

  00024	e5953010	 ldr         r3, [r5, #0x10]
  00028	e595e008	 ldr         lr, [r5, #8]
  0002c	e59d4000	 ldr         r4, [sp]
  00030	e595000c	 ldr         r0, [r5, #0xC]
  00034	e1a02007	 mov         r2, r7
  00038	e7933104	 ldr         r3, [r3, +r4, lsl #2]
  0003c	e79ee104	 ldr         lr, [lr, +r4, lsl #2]
  00040	e7900104	 ldr         r0, [r0, +r4, lsl #2]
  00044	e5933024	 ldr         r3, [r3, #0x24]
  00048	e046100e	 sub         r1, r6, lr
  0004c	e1a0e00f	 mov         lr, pc
  00050	e12fff13	 bx          r3
  00054		 |$LN1@GPIOPullup|

; 138  :     }
; 139  :     return (DWORD) TRUE;

  00054	e3a00001	 mov         r0, #1

; 140  : }

  00058	e28dd004	 add         sp, sp, #4
  0005c	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00060	e12fff1e	 bx          lr
  00064		 |$M43717|

			 ENDP  ; |GPIOPullup|

	EXPORT	|GPIOPulldown|

  00000			 AREA	 |.pdata|, PDATA
|$T43732| DCD	|$LN6@GPIOPulldo|
	DCD	0x40001902
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GPIOPulldown| PROC

; 143  : {

  00000		 |$LN6@GPIOPulldo|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M43729|
  00008	e1a07002	 mov         r7, r2
  0000c	e1a06001	 mov         r6, r1
  00010	e1a05000	 mov         r5, r0

; 144  :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;
; 145  :     int grp;
; 146  :     if (GetGroupByID(pDevice,id,&grp))

  00014	e28d2000	 add         r2, sp, #0
  00018	eb000000	 bl          GetGroupByID
  0001c	e3500000	 cmp         r0, #0
  00020	0a00000b	 beq         |$LN1@GPIOPulldo|

; 147  :     {
; 148  :         pDevice->rgGpioTbls[grp]->pfnPulldown((HANDLE) pDevice->rgHandles[grp], id - pDevice->rgRanges[grp], enable);

  00024	e5953010	 ldr         r3, [r5, #0x10]
  00028	e595e008	 ldr         lr, [r5, #8]
  0002c	e59d4000	 ldr         r4, [sp]
  00030	e595000c	 ldr         r0, [r5, #0xC]
  00034	e1a02007	 mov         r2, r7
  00038	e7933104	 ldr         r3, [r3, +r4, lsl #2]
  0003c	e79ee104	 ldr         lr, [lr, +r4, lsl #2]
  00040	e7900104	 ldr         r0, [r0, +r4, lsl #2]
  00044	e5933028	 ldr         r3, [r3, #0x28]
  00048	e046100e	 sub         r1, r6, lr
  0004c	e1a0e00f	 mov         lr, pc
  00050	e12fff13	 bx          r3
  00054		 |$LN1@GPIOPulldo|

; 149  :     }
; 150  :     return (DWORD) TRUE;

  00054	e3a00001	 mov         r0, #1

; 151  : }

  00058	e28dd004	 add         sp, sp, #4
  0005c	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00060	e12fff1e	 bx          lr
  00064		 |$M43730|

			 ENDP  ; |GPIOPulldown|

	EXPORT	|GPIOIoControl|

  00000			 AREA	 |.pdata|, PDATA
|$T43747| DCD	|$LN6@GPIOIoCont|
	DCD	0x40002002
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GPIOIoControl| PROC

; 163  : {

  00000		 |$LN6@GPIOIoCont|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004	e24dd010	 sub         sp, sp, #0x10
  00008		 |$M43744|
  00008	e1a08003	 mov         r8, r3
  0000c	e1a09002	 mov         r9, r2
  00010	e1a05000	 mov         r5, r0

; 164  :     //UNREFERENCED_PARAMETER(pOverlap);
; 165  :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;
; 166  :     int grp;
; 167  :     BOOL rc = FALSE;
; 168  :     
; 169  :     if (GetGroupByID(pDevice,id,&grp))

  00014	e28d200c	 add         r2, sp, #0xC
  00018	e3a04000	 mov         r4, #0
  0001c	eb000000	 bl          GetGroupByID
  00020	e3500000	 cmp         r0, #0
  00024	0a000011	 beq         |$LN1@GPIOIoCont|

; 170  :     {
; 171  :         rc = pDevice->rgGpioTbls[grp]->pfnIoControl((HANDLE) pDevice->rgHandles[grp], code, pInBuffer,
; 172  :                 inSize, pOutBuffer, outSize, pOutSize);

  00028	e5951010	 ldr         r1, [r5, #0x10]
  0002c	e59de00c	 ldr         lr, [sp, #0xC]
  00030	e595000c	 ldr         r0, [r5, #0xC]
  00034	e59d4038	 ldr         r4, [sp, #0x38]
  00038	e791110e	 ldr         r1, [r1, +lr, lsl #2]
  0003c	e59d5034	 ldr         r5, [sp, #0x34]
  00040	e59d6030	 ldr         r6, [sp, #0x30]
  00044	e591702c	 ldr         r7, [r1, #0x2C]
  00048	e59d302c	 ldr         r3, [sp, #0x2C]
  0004c	e790010e	 ldr         r0, [r0, +lr, lsl #2]
  00050	e1a01009	 mov         r1, r9
  00054	e1a02008	 mov         r2, r8
  00058	e58d4008	 str         r4, [sp, #8]
  0005c	e58d5004	 str         r5, [sp, #4]
  00060	e58d6000	 str         r6, [sp]
  00064	e1a0e00f	 mov         lr, pc
  00068	e12fff17	 bx          r7
  0006c	e1a04000	 mov         r4, r0
  00070		 |$LN1@GPIOIoCont|

; 173  :     }    
; 174  :     return (DWORD) rc;    
; 175  : }

  00070	e1a00004	 mov         r0, r4
  00074	e28dd010	 add         sp, sp, #0x10
  00078	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  0007c	e12fff1e	 bx          lr
  00080		 |$M43745|

			 ENDP  ; |GPIOIoControl|

	END
