; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\TPS659XX\GPIO\tps659xx_gpio.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|?csGpio@@3UCRITICAL_SECTION@@A| [ DATA ] ; csGpio
	EXPORT	|DEVICE_IFC_GPIO_GUID| [ DATA ]
	EXPORT	|DEVICE_IFC_TWL_GUID| [ DATA ]
	EXPORT	|dpCurSettings| [ DATA ]
	EXPORT	|?g_fGpioPostInit@@3HA| [ DATA ]	; g_fGpioPostInit
	EXPORT	|Tps659xx_Gpio| [ DATA ]

  00000			 AREA	 |.bss|, NOINIT
|?csGpio@@3UCRITICAL_SECTION@@A| % 0x14			; csGpio
|s_hTritonDriver| % 0x4
|?g_fGpioPostInit@@3HA| % 0x4				; g_fGpioPostInit

  00000			 AREA	 |.data|, DATA
|dpCurSettings| DCB "T", 0x0, "P", 0x0, "S", 0x0, "6", 0x0, "5", 0x0, "9", 0x0
	DCB	"x", 0x0, "x", 0x0, " ", 0x0, "G", 0x0, "P", 0x0, "I", 0x0
	DCB	"O", 0x0, 0x0, 0x0
	%	36
	DCB	"E", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, "s", 0x0
	DCB	0x0, 0x0
	%	50
	DCB	"W", 0x0, "a", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n", 0x0
	DCB	"g", 0x0, "s", 0x0, 0x0, 0x0
	%	46
	DCB	"F", 0x0, "u", 0x0, "n", 0x0, "c", 0x0, "t", 0x0, "i", 0x0
	DCB	"o", 0x0, "n", 0x0, 0x0, 0x0
	%	46
	DCB	"I", 0x0, "n", 0x0, "f", 0x0, "o", 0x0, 0x0, 0x0
	%	54
	DCB	"I", 0x0, "S", 0x0, "T", 0x0, 0x0, 0x0
	%	56
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCD	0x3
	%	4
|s_rgGpioRegs| DCD 0x10098
	DCD	0x1009b
	DCD	0x1009e
	DCD	0x100a1
	DCD	0x100a4
	DCD	0x100a7
	DCD	0x100ab
	DCD	0x100c0
	DCD	0x100ac
	DCD	0x100c1
	DCD	0x10099
	DCD	0x1009c
	DCD	0x1009f
	DCD	0x100a2
	DCD	0x100a5
	DCD	0x100a8
	DCD	0x100ad
	DCD	0x100c2
	DCD	0x100ae
	DCD	0x100c3
	DCD	0x1009a
	DCD	0x1009d
	DCD	0x100a0
	DCD	0x100a3
	DCD	0x100a6
	DCD	0x100a9
	DCD	0x100af
	DCD	0x100c4
	DCD	0x0
	DCD	0x0
|s_TritonIntrIdMap| DCD 0x18
	DCD	0x1000019
	DCD	0x200001a
	DCD	0x300001b
	DCD	0x400001c
	DCD	0x500001d
	DCD	0x600001e
	DCD	0x700001f
	DCD	0x10020
	DCD	0x1010021
	DCD	0x2010022
	DCD	0x3010023
	DCD	0x4010024
	DCD	0x5010025
	DCD	0x6010026
	DCD	0x7010027
	DCD	0x20028
	DCD	0x1020029
|Tps659xx_Gpio| DCD 0x0
	DCD	|?Tps659xxGpioInit@@YAHPBGPAPAXPAI@Z|
	DCD	|?Tps659xxGpioPostInit@@YAHPAX@Z|
	DCD	|?Tps659xxGpioDeinit@@YAHPAX@Z|
	DCD	|?Tps659xxGpioSetBit@@YAHPAXI@Z|
	DCD	|?Tps659xxGpioClrBit@@YAHPAXI@Z|
	DCD	|?Tps659xxGpioGetBit@@YAKPAXI@Z|
	DCD	|?Tps659xxGpioSetMode@@YAHPAXII@Z|
	DCD	|?Tps659xxGpioGetMode@@YAKPAXI@Z|
	DCD	|?Tps659xxGpioPullup@@YAHPAXII@Z|
	DCD	|?Tps659xxGpioPulldown@@YAHPAXII@Z|
	DCD	|?Tps659xxGpioIoControl@@YAHPAXIPAEI1IPAK@Z|
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	%	8

  00000			 AREA	 |.rdata|, DATA, READONLY
|DEVICE_IFC_GPIO_GUID| DCD 0xa0272611
	DCW	0xdea0
	DCW	0x4678
	DCB	0xae
	DCB	0x62
	DCB	0x65
	DCB	0x61
	DCB	0x5b
	DCB	0x7d
	DCB	0x53
	DCB	0xaa
|DEVICE_IFC_TWL_GUID| DCD 0xdef0a04b
	DCW	0xb967
	DCW	0x43db
	DCB	0x95
	DCB	0x9e
	DCB	0xd9
	DCB	0xfc
	DCB	0x62
	DCB	0x25
	DCB	0xcd
	DCB	0xeb
	EXPORT	|GetCurrentProcessId|
	IMPORT	|__GetUserKData|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T37674| DCD	|$LN5@GetCurrent|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GetCurrentProcessId| PROC

; 373  : _inline DWORD GetCurrentProcessId(void) {

  00000		 |$LN5@GetCurrent|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37671|

; 374  :     return __GetUserKData (SYSHANDLE_OFFSET + (SH_CURPROC * sizeof(HANDLE)));

  00004	e3a0000c	 mov         r0, #0xC
  00008	eb000000	 bl          __GetUserKData

; 375  : }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M37672|

			 ENDP  ; |GetCurrentProcessId|

	EXPORT	|?IsEqualGUID@@YAHABU_GUID@@0@Z|	; IsEqualGUID
	IMPORT	|memcmp|
; File c:\wince600\public\common\sdk\inc\objbase.h

  00000			 AREA	 |.pdata|, PDATA
|$T37688| DCD	|$LN7@IsEqualGUI|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsEqualGUID@@YAHABU_GUID@@0@Z| PROC	; IsEqualGUID

; 493  : {

  00000		 |$LN7@IsEqualGUI|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37685|

; 494  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

  00004	e3a02010	 mov         r2, #0x10
  00008	eb000000	 bl          memcmp
  0000c	e3500000	 cmp         r0, #0
  00010	03a00001	 moveq       r0, #1

; 495  : }

  00014	049de004	 ldreq       lr, [sp], #4

; 494  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

  00018	13a00000	 movne       r0, #0

; 495  : }

  0001c	149de004	 ldrne       lr, [sp], #4
  00020	e12fff1e	 bx          lr
  00024		 |$M37686|

			 ENDP  ; |?IsEqualGUID@@YAHABU_GUID@@0@Z|, IsEqualGUID

	IMPORT	|TWLOpen|
; File c:\wince600\platform\common\src\soc\common_ti_v1\tps659xx\gpio\tps659xx_gpio.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T37699| DCD	|$LN7@OpenTwl|
	DCD	0x40000b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?OpenTwl@@YAHXZ| PROC			; OpenTwl

; 209  : {

  00000		 |$LN7@OpenTwl|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37696|

; 210  :     // Try open TWL device driver
; 211  :     s_hTritonDriver = TWLOpen();

  00004	eb000000	 bl          TWLOpen
  00008	e59f3018	 ldr         r3, [pc, #0x18]
  0000c	e3500000	 cmp         r0, #0
  00010	e5830000	 str         r0, [r3]

; 212  : 
; 213  :     // If we get handle, we succeded
; 214  :     return (s_hTritonDriver != NULL);

  00014	13a00001	 movne       r0, #1

; 215  : }

  00018	149de004	 ldrne       lr, [sp], #4

; 212  : 
; 213  :     // If we get handle, we succeded
; 214  :     return (s_hTritonDriver != NULL);

  0001c	03a00000	 moveq       r0, #0

; 215  : }

  00020	049de004	 ldreq       lr, [sp], #4
  00024	e12fff1e	 bx          lr
  00028		 |$LN8@OpenTwl|
  00028		 |$LN9@OpenTwl|
  00028	00000000	 DCD         |s_hTritonDriver|
  0002c		 |$M37697|

			 ENDP  ; |?OpenTwl@@YAHXZ|, OpenTwl

	IMPORT	|TWLClose|

  00000			 AREA	 |.pdata|, PDATA
|$T37708| DCD	|$LN6@CloseTwl|
	DCD	0x40000b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CloseTwl@@YAXXZ| PROC		; CloseTwl

; 222  : {

  00000		 |$LN6@CloseTwl|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37705|

; 223  :     if (s_hTritonDriver != NULL)

  00004	e59f401c	 ldr         r4, [pc, #0x1C]
  00008	e5940000	 ldr         r0, [r4]
  0000c	e3500000	 cmp         r0, #0
  00010	0a000002	 beq         |$LN1@CloseTwl|

; 224  :         {
; 225  :         TWLClose(s_hTritonDriver);

  00014	eb000000	 bl          TWLClose

; 226  :         s_hTritonDriver = NULL;

  00018	e3a03000	 mov         r3, #0
  0001c	e5843000	 str         r3, [r4]
  00020		 |$LN1@CloseTwl|

; 227  :         }
; 228  : }

  00020	e8bd4010	 ldmia       sp!, {r4, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$LN7@CloseTwl|
  00028		 |$LN8@CloseTwl|
  00028	00000000	 DCD         |s_hTritonDriver|
  0002c		 |$M37706|

			 ENDP  ; |?CloseTwl@@YAXXZ|, CloseTwl

	IMPORT	|TWLWriteRegs|

  00000			 AREA	 |.pdata|, PDATA
|$T37730| DCD	|$LN11@WriteTwlRe|
	DCD	0x40001601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?WriteTwlReg@@YAHKPAEI@Z| PROC	; WriteTwlReg

; 238  : {

  00000		 |$LN11@WriteTwlRe|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004		 |$M37727|
  00004	e1a06002	 mov         r6, r2
  00008	e1a07001	 mov         r7, r1
  0000c	e1a08000	 mov         r8, r0

; 239  :     BOOL rc = FALSE;
; 240  : 
; 241  :     // If TWL isn't open, try to open it...
; 242  :     if ((s_hTritonDriver == NULL) && !OpenTwl()) goto cleanUp;

  00010	e59f503c	 ldr         r5, [pc, #0x3C]
  00014	e3a04000	 mov         r4, #0
  00018	e5950000	 ldr         r0, [r5]
  0001c	e3500000	 cmp         r0, #0
  00020	1a000003	 bne         |$LN2@WriteTwlRe|
  00024	eb000000	 bl          TWLOpen
  00028	e3500000	 cmp         r0, #0
  0002c	e5850000	 str         r0, [r5]
  00030	0a000004	 beq         |$cleanUp$37255|
  00034		 |$LN2@WriteTwlRe|

; 243  : 
; 244  :     // Call driver
; 245  :     rc = TWLWriteRegs(s_hTritonDriver, address, pdata, dataSize);

  00034	e1a03006	 mov         r3, r6
  00038	e1a02007	 mov         r2, r7
  0003c	e1a01008	 mov         r1, r8
  00040	eb000000	 bl          TWLWriteRegs
  00044	e1a04000	 mov         r4, r0
  00048		 |$cleanUp$37255|

; 246  : 
; 247  : cleanUp:
; 248  :     return rc;
; 249  : }

  00048	e1a00004	 mov         r0, r4
  0004c	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  00050	e12fff1e	 bx          lr
  00054		 |$LN12@WriteTwlRe|
  00054		 |$LN13@WriteTwlRe|
  00054	00000000	 DCD         |s_hTritonDriver|
  00058		 |$M37728|

			 ENDP  ; |?WriteTwlReg@@YAHKPAEI@Z|, WriteTwlReg

	IMPORT	|TWLReadRegs|

  00000			 AREA	 |.pdata|, PDATA
|$T37752| DCD	|$LN11@ReadTwlReg|
	DCD	0x40001601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ReadTwlReg@@YAHKPAEI@Z| PROC		; ReadTwlReg

; 259  : {

  00000		 |$LN11@ReadTwlReg|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004		 |$M37749|
  00004	e1a06002	 mov         r6, r2
  00008	e1a07001	 mov         r7, r1
  0000c	e1a08000	 mov         r8, r0

; 260  :     BOOL rc = FALSE;
; 261  : 
; 262  :     // If TWL isn't open, try to open it...
; 263  :     if ((s_hTritonDriver == NULL) && !OpenTwl()) goto cleanUp;

  00010	e59f503c	 ldr         r5, [pc, #0x3C]
  00014	e3a04000	 mov         r4, #0
  00018	e5950000	 ldr         r0, [r5]
  0001c	e3500000	 cmp         r0, #0
  00020	1a000003	 bne         |$LN2@ReadTwlReg|
  00024	eb000000	 bl          TWLOpen
  00028	e3500000	 cmp         r0, #0
  0002c	e5850000	 str         r0, [r5]
  00030	0a000004	 beq         |$cleanUp$37264|
  00034		 |$LN2@ReadTwlReg|

; 264  : 
; 265  :     // Call driver
; 266  :     rc = TWLReadRegs(s_hTritonDriver, address, pdata, dataSize);

  00034	e1a03006	 mov         r3, r6
  00038	e1a02007	 mov         r2, r7
  0003c	e1a01008	 mov         r1, r8
  00040	eb000000	 bl          TWLReadRegs
  00044	e1a04000	 mov         r4, r0
  00048		 |$cleanUp$37264|

; 267  : 
; 268  : cleanUp:
; 269  :     return rc;
; 270  : }

  00048	e1a00004	 mov         r0, r4
  0004c	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  00050	e12fff1e	 bx          lr
  00054		 |$LN12@ReadTwlReg|
  00054		 |$LN13@ReadTwlReg|
  00054	00000000	 DCD         |s_hTritonDriver|
  00058		 |$M37750|

			 ENDP  ; |?ReadTwlReg@@YAHKPAEI@Z|, ReadTwlReg

	EXPORT	|?Lock@@YAXXZ|				; Lock
	IMPORT	|EnterCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T37761| DCD	|$LN6@Lock|
	DCD	0x40000801
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Lock@@YAXXZ| PROC			; Lock

; 276  : {

  00000		 |$LN6@Lock|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37758|

; 277  :     if (g_fGpioPostInit)

  00004	e59f0010	 ldr         r0, [pc, #0x10]
  00008	e5903018	 ldr         r3, [r0, #0x18]
  0000c	e3530000	 cmp         r3, #0

; 278  :         EnterCriticalSection(&csGpio);

  00010	1b000000	 blne        EnterCriticalSection

; 279  : }

  00014	e49de004	 ldr         lr, [sp], #4
  00018	e12fff1e	 bx          lr
  0001c		 |$LN7@Lock|
  0001c		 |$LN8@Lock|
  0001c	00000000	 DCD         |?csGpio@@3UCRITICAL_SECTION@@A|
  00020		 |$M37759|

			 ENDP  ; |?Lock@@YAXXZ|, Lock

	EXPORT	|?Unlock@@YAXXZ|			; Unlock
	IMPORT	|LeaveCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T37770| DCD	|$LN6@Unlock|
	DCD	0x40000801
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Unlock@@YAXXZ| PROC			; Unlock

; 285  : {

  00000		 |$LN6@Unlock|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37767|

; 286  :     if (g_fGpioPostInit)

  00004	e59f0010	 ldr         r0, [pc, #0x10]
  00008	e5903018	 ldr         r3, [r0, #0x18]
  0000c	e3530000	 cmp         r3, #0

; 287  :         LeaveCriticalSection(&csGpio);

  00010	1b000000	 blne        LeaveCriticalSection

; 288  : }

  00014	e49de004	 ldr         lr, [sp], #4
  00018	e12fff1e	 bx          lr
  0001c		 |$LN7@Unlock|
  0001c		 |$LN8@Unlock|
  0001c	00000000	 DCD         |?csGpio@@3UCRITICAL_SECTION@@A|
  00020		 |$M37768|

			 ENDP  ; |?Unlock@@YAXXZ|, Unlock


  00000			 AREA	 |.pdata|, PDATA
|$T37779| DCD	|$LN5@SetGpioBan|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetGpioBankPowerState@@YAXIW4_CEDEVICE_POWER_STATE@@@Z| PROC ; SetGpioBankPowerState

; 297  : {

  00000		 |$LN5@SetGpioBan|
  00000		 |$M37776|

; 298  :     UNREFERENCED_PARAMETER(id);
; 299  :     UNREFERENCED_PARAMETER(state);
; 300  : }

  00000	e12fff1e	 bx          lr
  00004		 |$M37777|

			 ENDP  ; |?SetGpioBankPowerState@@YAXIW4_CEDEVICE_POWER_STATE@@@Z|, SetGpioBankPowerState


  00000			 AREA	 |.pdata|, PDATA
|$T37789| DCD	|$LN5@Tps659xxGp|
	DCD	0x40000400
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Tps659xxGpioInit@@YAHPBGPAPAXPAI@Z| PROC ; Tps659xxGpioInit

; 316  : {

  00000		 |$LN5@Tps659xxGp|
  00000		 |$M37786|

; 317  : 
; 318  :     UNREFERENCED_PARAMETER(szContext);
; 319  :     UNREFERENCED_PARAMETER(phContext);
; 320  : 
; 321  :     DEBUGMSG(ZONE_FUNCTION, (
; 322  :         L"+Tps659xxGpioInit(%s)\r\n", szContext
; 323  :         ));
; 324  : 
; 325  :     *pGpioCount = TPS659XX_MAX_GPIO_COUNT;

  00000	e3a03012	 mov         r3, #0x12
  00004	e5823000	 str         r3, [r2]

; 326  : 
; 327  :     DEBUGMSG(ZONE_FUNCTION, (L"-Tps659xxGpioInit()\r\n"));
; 328  :     return TRUE;

  00008	e3a00001	 mov         r0, #1

; 329  : }

  0000c	e12fff1e	 bx          lr
  00010		 |$M37787|

			 ENDP  ; |?Tps659xxGpioInit@@YAHPBGPAPAXPAI@Z|, Tps659xxGpioInit

	IMPORT	|InitializeCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T37798| DCD	|$LN5@Tps659xxGp@2|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Tps659xxGpioPostInit@@YAHPAX@Z| PROC	; Tps659xxGpioPostInit

; 342  : {

  00000		 |$LN5@Tps659xxGp@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37795|

; 343  : 
; 344  :     UNREFERENCED_PARAMETER(context);
; 345  :     InitializeCriticalSection(&csGpio);

  00004	e59f4018	 ldr         r4, [pc, #0x18]
  00008	e1a00004	 mov         r0, r4
  0000c	eb000000	 bl          InitializeCriticalSection

; 346  :     g_fGpioPostInit = TRUE;

  00010	e3a03001	 mov         r3, #1
  00014	e5843018	 str         r3, [r4, #0x18]

; 347  : 
; 348  :     return TRUE;

  00018	e3a00001	 mov         r0, #1

; 349  : }

  0001c	e8bd4010	 ldmia       sp!, {r4, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$LN6@Tps659xxGp@2|
  00024		 |$LN7@Tps659xxGp@2|
  00024	00000000	 DCD         |?csGpio@@3UCRITICAL_SECTION@@A|
  00028		 |$M37796|

			 ENDP  ; |?Tps659xxGpioPostInit@@YAHPAX@Z|, Tps659xxGpioPostInit

	IMPORT	|DeleteCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T37813| DCD	|$LN9@Tps659xxGp@3|
	DCD	0x40001001
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Tps659xxGpioDeinit@@YAHPAX@Z| PROC	; Tps659xxGpioDeinit

; 361  : {    

  00000		 |$LN9@Tps659xxGp@3|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37810|

; 362  :     UNREFERENCED_PARAMETER(context);
; 363  :     DEBUGMSG(ZONE_FUNCTION, (L"+Tps659xxGpioDeinit(0x%08x)\r\n", context));
; 364  : 
; 365  :     CloseTwl();

  00004	e59f4030	 ldr         r4, [pc, #0x30]
  00008	e5940014	 ldr         r0, [r4, #0x14]
  0000c	e3500000	 cmp         r0, #0
  00010	0a000002	 beq         |$LN4@Tps659xxGp@3|
  00014	eb000000	 bl          TWLClose
  00018	e3a03000	 mov         r3, #0
  0001c	e5843014	 str         r3, [r4, #0x14]
  00020		 |$LN4@Tps659xxGp@3|

; 366  :     if (g_fGpioPostInit) DeleteCriticalSection(&csGpio);

  00020	e5943018	 ldr         r3, [r4, #0x18]
  00024	e3530000	 cmp         r3, #0
  00028	11a00004	 movne       r0, r4
  0002c	1b000000	 blne        DeleteCriticalSection

; 367  : 
; 368  :     DEBUGMSG(ZONE_FUNCTION, (L"-Tps659xxGpioDeinit()\r\n"));
; 369  :     return TRUE;

  00030	e3a00001	 mov         r0, #1

; 370  : }

  00034	e8bd4010	 ldmia       sp!, {r4, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$LN10@Tps659xxGp@3|
  0003c		 |$LN11@Tps659xxGp@3|
  0003c	00000000	 DCD         |?csGpio@@3UCRITICAL_SECTION@@A|
  00040		 |$M37811|

			 ENDP  ; |?Tps659xxGpioDeinit@@YAHPAX@Z|, Tps659xxGpioDeinit


  00000			 AREA	 |.pdata|, PDATA
|$T37850| DCD	|$LN24@Tps659xxGp@4|
	DCD	0x40005a02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Tps659xxGpioSetMode@@YAHPAXII@Z| PROC ; Tps659xxGpioSetMode

; 382  : {

  00000		 |$LN24@Tps659xxGp@4|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M37847|
  00008	e1a04002	 mov         r4, r2

; 383  :     BOOL rc = FALSE;
; 384  :     UINT bit = GPIO_BIT(id);
; 385  :     UINT bank = GPIO_BANK(id);
; 386  :     UINT subGroup = GPIO_SUBGROUP(id);

  0000c	e1a03e81	 mov         r3, r1, lsl #29
  00010	e58d3004	 str         r3, [sp, #4]

; 387  :     UINT subIndex = GPIO_SUBINDEX(id);

  00014	e2013003	 and         r3, r1, #3
  00018	e1a0b083	 mov         r11, r3, lsl #1
  0001c	e3a00000	 mov         r0, #0
  00020	e2018007	 and         r8, r1, #7
  00024	e1a091a1	 mov         r9, r1, lsr #3

; 388  : 
; 389  :     UNREFERENCED_PARAMETER(context);
; 390  : 
; 391  : //    RETAILMSG(1,(TEXT("+Tps659xxGpioSetMode  %d\r\n"),id));
; 392  :     if (id < TPS659XX_MAX_GPIO_COUNT)

  00028	e3510012	 cmp         r1, #0x12
  0002c	2a000048	 bcs         |$LN7@Tps659xxGp@4|

; 393  :         {
; 394  :         UINT8 val;
; 395  :         UINT8 edgeMode = 0;
; 396  : 
; 397  :         Lock();

  00030	e59f612c	 ldr         r6, [pc, #0x12C]
  00034	e3a05000	 mov         r5, #0
  00038	e5963018	 ldr         r3, [r6, #0x18]
  0003c	e3530000	 cmp         r3, #0
  00040	11a00006	 movne       r0, r6
  00044	1b000000	 blne        EnterCriticalSection

; 398  :         SetGpioBankPowerState(id, D0);
; 399  : 
; 400  :         // set direction
; 401  :         if ((mode & GPIO_DIR_INPUT) != 0)
; 402  :             {
; 403  :             ReadTwlReg(s_rgGpioRegs[bank].GPIODATADIR, &val, sizeof(val));

  00048	e59fa110	 ldr         r10, [pc, #0x110]
  0004c	e0893109	 add         r3, r9, r9, lsl #2
  00050	e3140001	 tst         r4, #1
  00054	e08a7183	 add         r7, r10, r3, lsl #3
  00058	e5970004	 ldr         r0, [r7, #4]
  0005c	e3a02001	 mov         r2, #1
  00060	e28d1000	 add         r1, sp, #0
  00064	0a000005	 beq         |$LN6@Tps659xxGp@4|
  00068	eb000000	 bl          |?ReadTwlReg@@YAHKPAEI@Z|

; 404  :             val &= ~(1 << bit);

  0006c	e3a03001	 mov         r3, #1
  00070	e1a08813	 mov         r8, r3, lsl r8
  00074	e5dd3000	 ldrb        r3, [sp]

; 405  :             WriteTwlReg(s_rgGpioRegs[bank].GPIODATADIR, &val, sizeof(val));

  00078	e1c33008	 bic         r3, r3, r8

; 406  :             }
; 407  :         else

  0007c	ea000004	 b           |$LN20@Tps659xxGp@4|
  00080		 |$LN6@Tps659xxGp@4|

; 408  :             {
; 409  :             ReadTwlReg(s_rgGpioRegs[bank].GPIODATADIR, &val, sizeof(val));

  00080	eb000000	 bl          |?ReadTwlReg@@YAHKPAEI@Z|

; 410  :             val |= (1 << bit);

  00084	e5dd3000	 ldrb        r3, [sp]
  00088	e3a02001	 mov         r2, #1
  0008c	e1a08812	 mov         r8, r2, lsl r8

; 411  :             WriteTwlReg(s_rgGpioRegs[bank].GPIODATADIR, &val, sizeof(val));

  00090	e1833008	 orr         r3, r3, r8
  00094		 |$LN20@Tps659xxGp@4|
  00094	e5970004	 ldr         r0, [r7, #4]
  00098	e3a02001	 mov         r2, #1
  0009c	e28d1000	 add         r1, sp, #0
  000a0	e5cd3000	 strb        r3, [sp]
  000a4	eb000000	 bl          |?WriteTwlReg@@YAHKPAEI@Z|

; 412  :             }
; 413  : 
; 414  :         // enable debouncing
; 415  :         if ((mode & GPIO_DEBOUNCE_ENABLE) != 0)
; 416  :             {
; 417  :             ReadTwlReg(s_rgGpioRegs[bank].GPIO_DEBEN, &val, sizeof(val));

  000a8	e5970014	 ldr         r0, [r7, #0x14]
  000ac	e3140020	 tst         r4, #0x20
  000b0	e3a02001	 mov         r2, #1
  000b4	e28d1000	 add         r1, sp, #0
  000b8	0a000003	 beq         |$LN4@Tps659xxGp@4|
  000bc	eb000000	 bl          |?ReadTwlReg@@YAHKPAEI@Z|

; 418  :             val |= (1 << bit);

  000c0	e5dd3000	 ldrb        r3, [sp]

; 419  :             WriteTwlReg(s_rgGpioRegs[bank].GPIO_DEBEN, &val, sizeof(val));

  000c4	e1833008	 orr         r3, r3, r8

; 420  :             }
; 421  :         else

  000c8	ea000002	 b           |$LN21@Tps659xxGp@4|
  000cc		 |$LN4@Tps659xxGp@4|

; 422  :             {
; 423  :             ReadTwlReg(s_rgGpioRegs[bank].GPIO_DEBEN, &val, sizeof(val));

  000cc	eb000000	 bl          |?ReadTwlReg@@YAHKPAEI@Z|

; 424  :             val &= ~(1 << bit);

  000d0	e5dd3000	 ldrb        r3, [sp]

; 425  :             WriteTwlReg(s_rgGpioRegs[bank].GPIO_DEBEN, &val, sizeof(val));

  000d4	e1c33008	 bic         r3, r3, r8
  000d8		 |$LN21@Tps659xxGp@4|
  000d8	e5970014	 ldr         r0, [r7, #0x14]
  000dc	e3a02001	 mov         r2, #1
  000e0	e28d1000	 add         r1, sp, #0
  000e4	e5cd3000	 strb        r3, [sp]
  000e8	eb000000	 bl          |?WriteTwlReg@@YAHKPAEI@Z|

; 426  :             }
; 427  : 
; 428  :         // set edge interrupt type
; 429  :         if (mode & GPIO_INT_HIGH_LOW) edgeMode |= DETECT_FALLING;
; 430  :         if (mode & GPIO_INT_LOW_HIGH) edgeMode |= DETECT_RISING;
; 431  : 
; 432  :         ReadTwlReg(s_rgGpioRegs[bank].rgSubGroup[subGroup].GPIO_EDR, &val, sizeof(val));

  000ec	e59d2004	 ldr         r2, [sp, #4]
  000f0	e3140004	 tst         r4, #4
  000f4	e0893109	 add         r3, r9, r9, lsl #2
  000f8	e0833fa2	 add         r3, r3, r2, lsr #31
  000fc	13a05002	 movne       r5, #2
  00100	e3140002	 tst         r4, #2
  00104	e08a4183	 add         r4, r10, r3, lsl #3
  00108	e594001c	 ldr         r0, [r4, #0x1C]
  0010c	e3a02001	 mov         r2, #1
  00110	e28d1000	 add         r1, sp, #0
  00114	13855001	 orrne       r5, r5, #1
  00118	eb000000	 bl          |?ReadTwlReg@@YAHKPAEI@Z|

; 433  :         val &= ~(DETECT_MASK << subIndex);

  0011c	e5dd3000	 ldrb        r3, [sp]
  00120	e3a02003	 mov         r2, #3

; 434  :         val |= (edgeMode << subIndex);
; 435  :         WriteTwlReg(s_rgGpioRegs[bank].rgSubGroup[subGroup].GPIO_EDR, &val, sizeof(val));

  00124	e594001c	 ldr         r0, [r4, #0x1C]
  00128	e1c33b12	 bic         r3, r3, r2, lsl r11
  0012c	e3a02001	 mov         r2, #1
  00130	e1833b15	 orr         r3, r3, r5, lsl r11
  00134	e28d1000	 add         r1, sp, #0
  00138	e5cd3000	 strb        r3, [sp]
  0013c	eb000000	 bl          |?WriteTwlReg@@YAHKPAEI@Z|

; 436  : 
; 437  :         SetGpioBankPowerState(id, D4);
; 438  :         Unlock();

  00140	e5963018	 ldr         r3, [r6, #0x18]
  00144	e3530000	 cmp         r3, #0
  00148	11a00006	 movne       r0, r6
  0014c	1b000000	 blne        LeaveCriticalSection

; 439  :         rc = TRUE;

  00150	e3a00001	 mov         r0, #1
  00154		 |$LN7@Tps659xxGp@4|

; 440  :         }
; 441  :     return rc;
; 442  : }

  00154	e28dd008	 add         sp, sp, #8
  00158	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  0015c	e12fff1e	 bx          lr
  00160		 |$LN25@Tps659xxGp@4|
  00160		 |$LN26@Tps659xxGp@4|
  00160	00000000	 DCD         |s_rgGpioRegs|
  00164		 |$LN27@Tps659xxGp@4|
  00164	00000000	 DCD         |?csGpio@@3UCRITICAL_SECTION@@A|
  00168		 |$M37848|

			 ENDP  ; |?Tps659xxGpioSetMode@@YAHPAXII@Z|, Tps659xxGpioSetMode


  00000			 AREA	 |.pdata|, PDATA
|$T37880| DCD	|$LN16@Tps659xxGp@5|
	DCD	0x40003402
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Tps659xxGpioGetMode@@YAKPAXI@Z| PROC	; Tps659xxGpioGetMode

; 453  : { 

  00000		 |$LN16@Tps659xxGp@5|
  00000	e92d47f0	 stmdb       sp!, {r4 - r10, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M37877|

; 454  :     UINT bit = GPIO_BIT(id);
; 455  :     UINT bank = GPIO_BANK(id);
; 456  :     UINT subGroup = GPIO_SUBGROUP(id);

  00008	e1a09e81	 mov         r9, r1, lsl #29

; 457  :     UINT subIndex = GPIO_SUBINDEX(id);

  0000c	e201a003	 and         r10, r1, #3
  00010	e2017007	 and         r7, r1, #7
  00014	e1a051a1	 mov         r5, r1, lsr #3

; 458  :     DWORD mode =(DWORD) -1;;

  00018	e3e04000	 mvn         r4, #0

; 459  : 
; 460  :     UNREFERENCED_PARAMETER(hContext);
; 461  : 
; 462  : 
; 463  :     if (id < TPS659XX_MAX_GPIO_COUNT)

  0001c	e3510012	 cmp         r1, #0x12
  00020	2a000025	 bcs         |$LN1@Tps659xxGp@5|

; 464  :         {
; 465  :         UINT8 val;
; 466  :         SetGpioBankPowerState(id, D0);
; 467  : 
; 468  :         // get direction
; 469  :         ReadTwlReg(s_rgGpioRegs[bank].GPIODATADIR, &val, sizeof(val));

  00024	e59f80a0	 ldr         r8, [pc, #0xA0]
  00028	e0853105	 add         r3, r5, r5, lsl #2
  0002c	e3a02001	 mov         r2, #1
  00030	e0886183	 add         r6, r8, r3, lsl #3
  00034	e5960004	 ldr         r0, [r6, #4]
  00038	e28d1000	 add         r1, sp, #0
  0003c	eb000000	 bl          |?ReadTwlReg@@YAHKPAEI@Z|

; 470  :         mode = (val & (1 << bit)) ? GPIO_DIR_OUTPUT : GPIO_DIR_INPUT;

  00040	e5dd3000	 ldrb        r3, [sp]
  00044	e3a02001	 mov         r2, #1
  00048	e1a07712	 mov         r7, r2, lsl r7

; 471  : 
; 472  :         // get debounce state
; 473  :         ReadTwlReg(s_rgGpioRegs[bank].GPIO_DEBEN, &val, sizeof(val));

  0004c	e5960014	 ldr         r0, [r6, #0x14]
  00050	e1130007	 tst         r3, r7
  00054	13a04000	 movne       r4, #0
  00058	e3a02001	 mov         r2, #1
  0005c	e28d1000	 add         r1, sp, #0
  00060	03a04001	 moveq       r4, #1
  00064	eb000000	 bl          |?ReadTwlReg@@YAHKPAEI@Z|

; 474  :         mode |= (val & (1 << bit)) ? GPIO_DEBOUNCE_ENABLE : 0;

  00068	e5dd3000	 ldrb        r3, [sp]

; 475  : 
; 476  :         // get edge detection mode
; 477  :         ReadTwlReg(s_rgGpioRegs[bank].rgSubGroup[subGroup].GPIO_EDR, &val, sizeof(val));

  0006c	e3a02001	 mov         r2, #1
  00070	e28d1000	 add         r1, sp, #0
  00074	e1130007	 tst         r3, r7
  00078	e0853105	 add         r3, r5, r5, lsl #2
  0007c	e0833fa9	 add         r3, r3, r9, lsr #31
  00080	e0883183	 add         r3, r8, r3, lsl #3
  00084	e593001c	 ldr         r0, [r3, #0x1C]
  00088	13a0e020	 movne       lr, #0x20
  0008c	03a0e000	 moveq       lr, #0
  00090	e18e4004	 orr         r4, lr, r4
  00094	eb000000	 bl          |?ReadTwlReg@@YAHKPAEI@Z|

; 478  :         val = (UINT8) ((val >> subIndex) & DETECT_MASK);

  00098	e5dd2000	 ldrb        r2, [sp]
  0009c	e1a0308a	 mov         r3, r10, lsl #1
  000a0	e1a03332	 mov         r3, r2, lsr r3
  000a4	e20330ff	 and         r3, r3, #0xFF
  000a8	e2033003	 and         r3, r3, #3

; 479  : 
; 480  :         if (val & DETECT_FALLING) mode |= GPIO_INT_HIGH_LOW;

  000ac	e3130002	 tst         r3, #2
  000b0	13844004	 orrne       r4, r4, #4

; 481  :         if (val & DETECT_RISING) mode |= GPIO_INT_LOW_HIGH;

  000b4	e3130001	 tst         r3, #1
  000b8	13844002	 orrne       r4, r4, #2
  000bc		 |$LN1@Tps659xxGp@5|

; 482  : 
; 483  :         SetGpioBankPowerState(id, D4);        
; 484  :         }
; 485  : 
; 486  :     return mode;
; 487  : }

  000bc	e1a00004	 mov         r0, r4
  000c0	e28dd004	 add         sp, sp, #4
  000c4	e8bd47f0	 ldmia       sp!, {r4 - r10, lr}
  000c8	e12fff1e	 bx          lr
  000cc		 |$LN17@Tps659xxGp@5|
  000cc		 |$LN18@Tps659xxGp@5|
  000cc	00000000	 DCD         |s_rgGpioRegs|
  000d0		 |$M37878|

			 ENDP  ; |?Tps659xxGpioGetMode@@YAKPAXI@Z|, Tps659xxGpioGetMode


  00000			 AREA	 |.pdata|, PDATA
|$T37912| DCD	|$LN17@Tps659xxGp@6|
	DCD	0x40002d02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Tps659xxGpioPullup@@YAHPAXII@Z| PROC	; Tps659xxGpioPullup

; 501  : {

  00000		 |$LN17@Tps659xxGp@6|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M37909|
  00008	e1a04002	 mov         r4, r2

; 502  :     BOOL rc = FALSE;
; 503  :     UINT bank = GPIO_BANK(id);
; 504  :     UINT subGroup = GPIO_SUBGROUP(id);
; 505  :     UINT subIndex = GPIO_SUBINDEX(id);

  0000c	e2013003	 and         r3, r1, #3
  00010	e1a07083	 mov         r7, r3, lsl #1
  00014	e1a09e81	 mov         r9, r1, lsl #29
  00018	e3a00000	 mov         r0, #0
  0001c	e1a081a1	 mov         r8, r1, lsr #3

; 506  : 
; 507  :     UNREFERENCED_PARAMETER(context);
; 508  : 
; 509  :     if (id < TPS659XX_MAX_GPIO_COUNT)

  00020	e3510012	 cmp         r1, #0x12
  00024	2a00001d	 bcs         |$LN2@Tps659xxGp@6|

; 510  :         {
; 511  :         UINT8 val;
; 512  :         UINT pullupState = 0;
; 513  : 
; 514  :         Lock();

  00028	e59f5080	 ldr         r5, [pc, #0x80]
  0002c	e3a06000	 mov         r6, #0
  00030	e5953018	 ldr         r3, [r5, #0x18]
  00034	e3530000	 cmp         r3, #0
  00038	11a00005	 movne       r0, r5
  0003c	1b000000	 blne        EnterCriticalSection

; 515  :         SetGpioBankPowerState(id, D0);
; 516  : 
; 517  :         // set pullup state
; 518  :         if (enable) pullupState = PULLUP_ENABLE;
; 519  : 
; 520  :         ReadTwlReg(s_rgGpioRegs[bank].rgSubGroup[subGroup].GPIOPUPDCTR, &val, sizeof(val));

  00040	e59f2064	 ldr         r2, [pc, #0x64]
  00044	e0883108	 add         r3, r8, r8, lsl #2
  00048	e0833fa9	 add         r3, r3, r9, lsr #31
  0004c	e3540000	 cmp         r4, #0
  00050	e0824183	 add         r4, r2, r3, lsl #3
  00054	e5940018	 ldr         r0, [r4, #0x18]
  00058	e3a02001	 mov         r2, #1
  0005c	e28d1000	 add         r1, sp, #0
  00060	13a06002	 movne       r6, #2
  00064	eb000000	 bl          |?ReadTwlReg@@YAHKPAEI@Z|

; 521  :         val &= ~(PULLUP_ENABLE << subIndex);

  00068	e5dd3000	 ldrb        r3, [sp]
  0006c	e3a02002	 mov         r2, #2

; 522  :         val |= (pullupState << subIndex);
; 523  :         WriteTwlReg(s_rgGpioRegs[bank].rgSubGroup[subGroup].GPIOPUPDCTR, &val, sizeof(val));

  00070	e5940018	 ldr         r0, [r4, #0x18]
  00074	e1c33712	 bic         r3, r3, r2, lsl r7
  00078	e3a02001	 mov         r2, #1
  0007c	e1833716	 orr         r3, r3, r6, lsl r7
  00080	e28d1000	 add         r1, sp, #0
  00084	e5cd3000	 strb        r3, [sp]
  00088	eb000000	 bl          |?WriteTwlReg@@YAHKPAEI@Z|

; 524  : 
; 525  :         SetGpioBankPowerState(id, D4);
; 526  :         Unlock();

  0008c	e5953018	 ldr         r3, [r5, #0x18]
  00090	e3530000	 cmp         r3, #0
  00094	11a00005	 movne       r0, r5
  00098	1b000000	 blne        LeaveCriticalSection

; 527  :         rc = TRUE;

  0009c	e3a00001	 mov         r0, #1
  000a0		 |$LN2@Tps659xxGp@6|

; 528  :         }
; 529  : 
; 530  :     return rc;
; 531  : }

  000a0	e28dd004	 add         sp, sp, #4
  000a4	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  000a8	e12fff1e	 bx          lr
  000ac		 |$LN18@Tps659xxGp@6|
  000ac		 |$LN19@Tps659xxGp@6|
  000ac	00000000	 DCD         |s_rgGpioRegs|
  000b0		 |$LN20@Tps659xxGp@6|
  000b0	00000000	 DCD         |?csGpio@@3UCRITICAL_SECTION@@A|
  000b4		 |$M37910|

			 ENDP  ; |?Tps659xxGpioPullup@@YAHPAXII@Z|, Tps659xxGpioPullup


  00000			 AREA	 |.pdata|, PDATA
|$T37945| DCD	|$LN17@Tps659xxGp@7|
	DCD	0x40002d02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Tps659xxGpioPulldown@@YAHPAXII@Z| PROC ; Tps659xxGpioPulldown

; 544  : {

  00000		 |$LN17@Tps659xxGp@7|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M37942|
  00008	e1a04002	 mov         r4, r2

; 545  :     BOOL rc = FALSE;
; 546  :     UINT bank = GPIO_BANK(id);
; 547  :     UINT subGroup = GPIO_SUBGROUP(id);
; 548  :     UINT subIndex = GPIO_SUBINDEX(id);

  0000c	e2013003	 and         r3, r1, #3
  00010	e1a07083	 mov         r7, r3, lsl #1
  00014	e1a09e81	 mov         r9, r1, lsl #29
  00018	e3a00000	 mov         r0, #0
  0001c	e1a081a1	 mov         r8, r1, lsr #3

; 549  : 
; 550  :     UNREFERENCED_PARAMETER(context);
; 551  : 
; 552  :     if (id < TPS659XX_MAX_GPIO_COUNT)

  00020	e3510012	 cmp         r1, #0x12
  00024	2a00001d	 bcs         |$LN2@Tps659xxGp@7|

; 553  :         {
; 554  :         UINT8 val;
; 555  :         UINT pulldownState = 0;
; 556  : 
; 557  :         Lock();

  00028	e59f5080	 ldr         r5, [pc, #0x80]
  0002c	e3a06000	 mov         r6, #0
  00030	e5953018	 ldr         r3, [r5, #0x18]
  00034	e3530000	 cmp         r3, #0
  00038	11a00005	 movne       r0, r5
  0003c	1b000000	 blne        EnterCriticalSection

; 558  :         SetGpioBankPowerState(id, D0);
; 559  : 
; 560  :         // set pullup state
; 561  :         if (enable) pulldownState = PULLDOWN_ENABLE;
; 562  : 
; 563  :         ReadTwlReg(s_rgGpioRegs[bank].rgSubGroup[subGroup].GPIOPUPDCTR, &val, sizeof(val));

  00040	e59f2064	 ldr         r2, [pc, #0x64]
  00044	e0883108	 add         r3, r8, r8, lsl #2
  00048	e0833fa9	 add         r3, r3, r9, lsr #31
  0004c	e3540000	 cmp         r4, #0
  00050	e0824183	 add         r4, r2, r3, lsl #3
  00054	e5940018	 ldr         r0, [r4, #0x18]
  00058	e3a02001	 mov         r2, #1
  0005c	e28d1000	 add         r1, sp, #0
  00060	13a06001	 movne       r6, #1
  00064	eb000000	 bl          |?ReadTwlReg@@YAHKPAEI@Z|

; 564  :         val &= ~(PULLDOWN_ENABLE << subIndex);

  00068	e5dd3000	 ldrb        r3, [sp]
  0006c	e3a02001	 mov         r2, #1

; 565  :         val |= (pulldownState << subIndex);
; 566  :         WriteTwlReg(s_rgGpioRegs[bank].rgSubGroup[subGroup].GPIOPUPDCTR, &val, sizeof(val));

  00070	e5940018	 ldr         r0, [r4, #0x18]
  00074	e1c33712	 bic         r3, r3, r2, lsl r7
  00078	e3a02001	 mov         r2, #1
  0007c	e1833716	 orr         r3, r3, r6, lsl r7
  00080	e28d1000	 add         r1, sp, #0
  00084	e5cd3000	 strb        r3, [sp]
  00088	eb000000	 bl          |?WriteTwlReg@@YAHKPAEI@Z|

; 567  : 
; 568  :         SetGpioBankPowerState(id, D4);
; 569  :         Unlock();

  0008c	e5953018	 ldr         r3, [r5, #0x18]
  00090	e3530000	 cmp         r3, #0
  00094	11a00005	 movne       r0, r5
  00098	1b000000	 blne        LeaveCriticalSection

; 570  :         rc = TRUE;

  0009c	e3a00001	 mov         r0, #1
  000a0		 |$LN2@Tps659xxGp@7|

; 571  :         }
; 572  : 
; 573  :     return rc;
; 574  : }

  000a0	e28dd004	 add         sp, sp, #4
  000a4	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  000a8	e12fff1e	 bx          lr
  000ac		 |$LN18@Tps659xxGp@7|
  000ac		 |$LN19@Tps659xxGp@7|
  000ac	00000000	 DCD         |s_rgGpioRegs|
  000b0		 |$LN20@Tps659xxGp@7|
  000b0	00000000	 DCD         |?csGpio@@3UCRITICAL_SECTION@@A|
  000b4		 |$M37943|

			 ENDP  ; |?Tps659xxGpioPulldown@@YAHPAXII@Z|, Tps659xxGpioPulldown

	IMPORT	|TWLInterruptMask|
	IMPORT	|TWLInterruptInitialize|

  00000			 AREA	 |.pdata|, PDATA
|$T37969| DCD	|$LN13@Tps659xxGp@8|
	DCD	0x40002101
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Tps659xxGpioInterruptInitialize@@YAHPAXKPAK0@Z| PROC ; Tps659xxGpioInterruptInitialize

; 589  : {

  00000		 |$LN13@Tps659xxGp@8|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004		 |$M37966|
  00004	e1a05003	 mov         r5, r3
  00008	e1a07002	 mov         r7, r2
  0000c	e1a08001	 mov         r8, r1

; 590  :     DWORD dwTritonIntr;
; 591  :     BOOL rc = FALSE;
; 592  : 
; 593  :     UNREFERENCED_PARAMETER(context);
; 594  : 
; 595  :     // If TWL isn't open, try to open it...
; 596  :     if ((s_hTritonDriver == NULL) && !OpenTwl()) goto cleanUp;

  00010	e59f6068	 ldr         r6, [pc, #0x68]
  00014	e3a04000	 mov         r4, #0
  00018	e5960000	 ldr         r0, [r6]
  0001c	e3500000	 cmp         r0, #0
  00020	1a000003	 bne         |$LN4@Tps659xxGp@8|
  00024	eb000000	 bl          TWLOpen
  00028	e3500000	 cmp         r0, #0
  0002c	e5860000	 str         r0, [r6]
  00030	0a00000e	 beq         |$cleanUp$37361|
  00034		 |$LN4@Tps659xxGp@8|

; 597  :     
; 598  :     dwTritonIntr = MAP_TO_TRITON_INTR(id);

  00034	e59fe040	 ldr         lr, [pc, #0x40]

; 599  :     // Call driver
; 600  :     rc = TWLInterruptInitialize(s_hTritonDriver, dwTritonIntr, hEvent);

  00038	e1a02005	 mov         r2, r5
  0003c	e79e5108	 ldr         r5, [lr, +r8, lsl #2]
  00040	e1a01005	 mov         r1, r5
  00044	eb000000	 bl          TWLInterruptInitialize
  00048	e1a04000	 mov         r4, r0

; 601  : 
; 602  :     if (rc == TRUE)

  0004c	e3540001	 cmp         r4, #1
  00050	1a000006	 bne         |$cleanUp$37361|

; 603  :     {
; 604  :         rc = TWLInterruptMask(s_hTritonDriver, dwTritonIntr, FALSE);        

  00054	e5960000	 ldr         r0, [r6]
  00058	e3a02000	 mov         r2, #0
  0005c	e1a01005	 mov         r1, r5
  00060	eb000000	 bl          TWLInterruptMask
  00064	e1a04000	 mov         r4, r0

; 605  :     }
; 606  : 
; 607  :     if (rc == TRUE)

  00068	e3540001	 cmp         r4, #1

; 608  :     {
; 609  :         *sysintr = dwTritonIntr;

  0006c	05875000	 streq       r5, [r7]
  00070		 |$cleanUp$37361|

; 610  :     }
; 611  : 
; 612  : cleanUp:
; 613  :     return rc;
; 614  : }

  00070	e1a00004	 mov         r0, r4
  00074	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  00078	e12fff1e	 bx          lr
  0007c		 |$LN14@Tps659xxGp@8|
  0007c		 |$LN15@Tps659xxGp@8|
  0007c	00000000	 DCD         |s_TritonIntrIdMap|
  00080		 |$LN16@Tps659xxGp@8|
  00080	00000000	 DCD         |s_hTritonDriver|
  00084		 |$M37967|

			 ENDP  ; |?Tps659xxGpioInterruptInitialize@@YAHPAXKPAK0@Z|, Tps659xxGpioInterruptInitialize


  00000			 AREA	 |.pdata|, PDATA
|$T37988| DCD	|$LN11@Tps659xxGp@9|
	DCD	0x40001301
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Tps659xxGpioInterruptMask@@YAXPAXKKH@Z| PROC ; Tps659xxGpioInterruptMask

; 623  : {

  00000		 |$LN11@Tps659xxGp@9|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M37985|
  00004	e1a05003	 mov         r5, r3
  00008	e1a06001	 mov         r6, r1

; 624  :     
; 625  :     UNREFERENCED_PARAMETER(hContext);
; 626  :     UNREFERENCED_PARAMETER(sysintr);
; 627  :     // If TWL isn't open, try to open it...
; 628  :     if ((s_hTritonDriver == NULL) && !OpenTwl()) goto cleanUp;

  0000c	e59f4034	 ldr         r4, [pc, #0x34]
  00010	e5940000	 ldr         r0, [r4]
  00014	e3500000	 cmp         r0, #0
  00018	1a000003	 bne         |$LN2@Tps659xxGp@9|
  0001c	eb000000	 bl          TWLOpen
  00020	e3500000	 cmp         r0, #0
  00024	e5840000	 str         r0, [r4]
  00028	0a000003	 beq         |$cleanUp$37372|
  0002c		 |$LN2@Tps659xxGp@9|

; 629  : 
; 630  :     TWLInterruptMask(s_hTritonDriver, MAP_TO_TRITON_INTR(id), fDisable);

  0002c	e59fe010	 ldr         lr, [pc, #0x10]
  00030	e1a02005	 mov         r2, r5
  00034	e79e1106	 ldr         r1, [lr, +r6, lsl #2]
  00038	eb000000	 bl          TWLInterruptMask
  0003c		 |$cleanUp$37372|

; 631  :     
; 632  : 
; 633  : 
; 634  : cleanUp:
; 635  :     return;
; 636  : }

  0003c	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$LN12@Tps659xxGp@9|
  00044		 |$LN13@Tps659xxGp@9|
  00044	00000000	 DCD         |s_TritonIntrIdMap|
  00048		 |$LN14@Tps659xxGp@9|
  00048	00000000	 DCD         |s_hTritonDriver|
  0004c		 |$M37986|

			 ENDP  ; |?Tps659xxGpioInterruptMask@@YAXPAXKKH@Z|, Tps659xxGpioInterruptMask


  00000			 AREA	 |.pdata|, PDATA
|$T38006| DCD	|$LN11@Tps659xxGp@10|
	DCD	0x40001201
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Tps659xxGpioInterruptDone@@YAXPAXKK@Z| PROC ; Tps659xxGpioInterruptDone

; 646  : {

  00000		 |$LN11@Tps659xxGp@10|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M38003|
  00004	e1a05001	 mov         r5, r1

; 647  :     BOOL rc = FALSE;
; 648  : 
; 649  :     UNREFERENCED_PARAMETER(context);
; 650  :     UNREFERENCED_PARAMETER(sysintr);
; 651  : 
; 652  :     // If TWL isn't open, try to open it...
; 653  :     if ((s_hTritonDriver == NULL) && !OpenTwl()) goto cleanUp;

  00008	e59f4034	 ldr         r4, [pc, #0x34]
  0000c	e5940000	 ldr         r0, [r4]
  00010	e3500000	 cmp         r0, #0
  00014	1a000003	 bne         |$LN2@Tps659xxGp@10|
  00018	eb000000	 bl          TWLOpen
  0001c	e3500000	 cmp         r0, #0
  00020	e5840000	 str         r0, [r4]
  00024	0a000003	 beq         |$cleanUp$37381|
  00028		 |$LN2@Tps659xxGp@10|

; 654  : 
; 655  :     // Call driver
; 656  :     rc = TWLInterruptMask(s_hTritonDriver, MAP_TO_TRITON_INTR(id), FALSE);

  00028	e59f3010	 ldr         r3, [pc, #0x10]
  0002c	e3a02000	 mov         r2, #0
  00030	e7931105	 ldr         r1, [r3, +r5, lsl #2]
  00034	eb000000	 bl          TWLInterruptMask
  00038		 |$cleanUp$37381|

; 657  : 
; 658  : cleanUp:
; 659  :     return;
; 660  : }

  00038	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$LN12@Tps659xxGp@10|
  00040		 |$LN13@Tps659xxGp@10|
  00040	00000000	 DCD         |s_TritonIntrIdMap|
  00044		 |$LN14@Tps659xxGp@10|
  00044	00000000	 DCD         |s_hTritonDriver|
  00048		 |$M38004|

			 ENDP  ; |?Tps659xxGpioInterruptDone@@YAXPAXKK@Z|, Tps659xxGpioInterruptDone

	IMPORT	|TWLInterruptDisable|

  00000			 AREA	 |.pdata|, PDATA
|$T38024| DCD	|$LN11@Tps659xxGp@11|
	DCD	0x40001101
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Tps659xxGpioInterruptDisable@@YAXPAXKK@Z| PROC ; Tps659xxGpioInterruptDisable

; 668  : {

  00000		 |$LN11@Tps659xxGp@11|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M38021|
  00004	e1a05001	 mov         r5, r1

; 669  :     BOOL rc = FALSE;
; 670  : 
; 671  :     UNREFERENCED_PARAMETER(context);
; 672  :     UNREFERENCED_PARAMETER(sysintr);
; 673  : 
; 674  :     // If TWL isn't open, try to open it...
; 675  :     if ((s_hTritonDriver == NULL) && !OpenTwl()) goto cleanUp;

  00008	e59f4030	 ldr         r4, [pc, #0x30]
  0000c	e5940000	 ldr         r0, [r4]
  00010	e3500000	 cmp         r0, #0
  00014	1a000003	 bne         |$LN2@Tps659xxGp@11|
  00018	eb000000	 bl          TWLOpen
  0001c	e3500000	 cmp         r0, #0
  00020	e5840000	 str         r0, [r4]
  00024	0a000002	 beq         |$cleanUp$37390|
  00028		 |$LN2@Tps659xxGp@11|

; 676  : 
; 677  :     // Call driver
; 678  :     rc = TWLInterruptDisable(s_hTritonDriver, MAP_TO_TRITON_INTR(id));

  00028	e59f300c	 ldr         r3, [pc, #0xC]
  0002c	e7931105	 ldr         r1, [r3, +r5, lsl #2]
  00030	eb000000	 bl          TWLInterruptDisable
  00034		 |$cleanUp$37390|

; 679  : 
; 680  : cleanUp:
; 681  :     return ;
; 682  : }

  00034	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$LN12@Tps659xxGp@11|
  0003c		 |$LN13@Tps659xxGp@11|
  0003c	00000000	 DCD         |s_TritonIntrIdMap|
  00040		 |$LN14@Tps659xxGp@11|
  00040	00000000	 DCD         |s_hTritonDriver|
  00044		 |$M38022|

			 ENDP  ; |?Tps659xxGpioInterruptDisable@@YAXPAXKK@Z|, Tps659xxGpioInterruptDisable

	IMPORT	|TWLWakeEnable|

  00000			 AREA	 |.pdata|, PDATA
|$T38046| DCD	|$LN11@Tps659xxGp@12|
	DCD	0x40001601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Tps659xxGpioWakeEnable@@YAHPAXKKH@Z| PROC ; Tps659xxGpioWakeEnable

; 696  : {

  00000		 |$LN11@Tps659xxGp@12|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M38043|
  00004	e1a06003	 mov         r6, r3
  00008	e1a07001	 mov         r7, r1

; 697  :     BOOL rc = FALSE;
; 698  : 
; 699  :     UNREFERENCED_PARAMETER(context);
; 700  :     UNREFERENCED_PARAMETER(sysintr);
; 701  : 
; 702  :     // If TWL isn't open, try to open it...
; 703  :     if ((s_hTritonDriver == NULL) && !OpenTwl()) goto cleanUp;

  0000c	e59f5040	 ldr         r5, [pc, #0x40]
  00010	e3a04000	 mov         r4, #0
  00014	e5950000	 ldr         r0, [r5]
  00018	e3500000	 cmp         r0, #0
  0001c	1a000003	 bne         |$LN2@Tps659xxGp@12|
  00020	eb000000	 bl          TWLOpen
  00024	e3500000	 cmp         r0, #0
  00028	e5850000	 str         r0, [r5]
  0002c	0a000004	 beq         |$cleanUp$37400|
  00030		 |$LN2@Tps659xxGp@12|

; 704  : 
; 705  :     // Call driver
; 706  :     rc = TWLWakeEnable(s_hTritonDriver, MAP_TO_TRITON_INTR(id), bEnable);

  00030	e59fe018	 ldr         lr, [pc, #0x18]
  00034	e1a02006	 mov         r2, r6
  00038	e79e1107	 ldr         r1, [lr, +r7, lsl #2]
  0003c	eb000000	 bl          TWLWakeEnable
  00040	e1a04000	 mov         r4, r0
  00044		 |$cleanUp$37400|

; 707  : 
; 708  : cleanUp:
; 709  :     return rc;
; 710  : }

  00044	e1a00004	 mov         r0, r4
  00048	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$LN12@Tps659xxGp@12|
  00050		 |$LN13@Tps659xxGp@12|
  00050	00000000	 DCD         |s_TritonIntrIdMap|
  00054		 |$LN14@Tps659xxGp@12|
  00054	00000000	 DCD         |s_hTritonDriver|
  00058		 |$M38044|

			 ENDP  ; |?Tps659xxGpioWakeEnable@@YAHPAXKKH@Z|, Tps659xxGpioWakeEnable


  00000			 AREA	 |.pdata|, PDATA
|$T38066| DCD	|$LN10@Tps659xxGp@13|
	DCD	0x40001602
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Tps659xxGpioSetBit@@YAHPAXI@Z| PROC	; Tps659xxGpioSetBit

; 728  : {

  00000		 |$LN10@Tps659xxGp@13|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M38063|

; 729  :     BOOL rc = FALSE;

  00008	e3a00000	 mov         r0, #0

; 730  :     UINT bit = GPIO_BIT(id);
; 731  :     UINT bank = GPIO_BANK(id);
; 732  : 
; 733  :     UNREFERENCED_PARAMETER(context);
; 734  : 
; 735  : //    RETAILMSG(1,(TEXT("+Tps659xxGpioSetBit %d\r\n"),id));
; 736  :     if (id < TPS659XX_MAX_GPIO_COUNT)

  0000c	e3510012	 cmp         r1, #0x12
  00010	2a00000c	 bcs         |$LN1@Tps659xxGp@13|

; 737  :         {
; 738  :         UINT8 val;
; 739  : 
; 740  :         SetGpioBankPowerState(id, D0);
; 741  :         val = (UINT8) ((1 << bit));
; 742  :         WriteTwlReg(s_rgGpioRegs[bank].SETGPIODATAOUT, &val, sizeof(val));

  00014	e59f2038	 ldr         r2, [pc, #0x38]
  00018	e1a031a1	 mov         r3, r1, lsr #3
  0001c	e0833103	 add         r3, r3, r3, lsl #2
  00020	e0823183	 add         r3, r2, r3, lsl #3
  00024	e2012007	 and         r2, r1, #7
  00028	e5930010	 ldr         r0, [r3, #0x10]
  0002c	e3a01001	 mov         r1, #1
  00030	e1a03211	 mov         r3, r1, lsl r2
  00034	e3a02001	 mov         r2, #1
  00038	e28d1000	 add         r1, sp, #0
  0003c	e5cd3000	 strb        r3, [sp]
  00040	eb000000	 bl          |?WriteTwlReg@@YAHKPAEI@Z|

; 743  :         SetGpioBankPowerState(id, D4);
; 744  :         rc = TRUE;

  00044	e3a00001	 mov         r0, #1
  00048		 |$LN1@Tps659xxGp@13|

; 745  :         }
; 746  :     return rc;
; 747  : }

  00048	e28dd004	 add         sp, sp, #4
  0004c	e49de004	 ldr         lr, [sp], #4
  00050	e12fff1e	 bx          lr
  00054		 |$LN11@Tps659xxGp@13|
  00054		 |$LN12@Tps659xxGp@13|
  00054	00000000	 DCD         |s_rgGpioRegs|
  00058		 |$M38064|

			 ENDP  ; |?Tps659xxGpioSetBit@@YAHPAXI@Z|, Tps659xxGpioSetBit


  00000			 AREA	 |.pdata|, PDATA
|$T38085| DCD	|$LN10@Tps659xxGp@14|
	DCD	0x40001602
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Tps659xxGpioClrBit@@YAHPAXI@Z| PROC	; Tps659xxGpioClrBit

; 761  : {

  00000		 |$LN10@Tps659xxGp@14|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M38082|

; 762  :     BOOL rc = FALSE;

  00008	e3a00000	 mov         r0, #0

; 763  :     UINT bit = GPIO_BIT(id);
; 764  :     UINT bank = GPIO_BANK(id);
; 765  : 
; 766  :     UNREFERENCED_PARAMETER(context);
; 767  : 
; 768  :     if (id < TPS659XX_MAX_GPIO_COUNT)

  0000c	e3510012	 cmp         r1, #0x12
  00010	2a00000c	 bcs         |$LN1@Tps659xxGp@14|

; 769  :         {
; 770  :         UINT8 val;
; 771  : 
; 772  :         SetGpioBankPowerState(id, D0);
; 773  :         val = (UINT8) ((1 << bit));
; 774  :         WriteTwlReg(s_rgGpioRegs[bank].CLEARGPIODATAOUT, &val, sizeof(val));

  00014	e59f2038	 ldr         r2, [pc, #0x38]
  00018	e1a031a1	 mov         r3, r1, lsr #3
  0001c	e0833103	 add         r3, r3, r3, lsl #2
  00020	e0823183	 add         r3, r2, r3, lsl #3
  00024	e2012007	 and         r2, r1, #7
  00028	e593000c	 ldr         r0, [r3, #0xC]
  0002c	e3a01001	 mov         r1, #1
  00030	e1a03211	 mov         r3, r1, lsl r2
  00034	e3a02001	 mov         r2, #1
  00038	e28d1000	 add         r1, sp, #0
  0003c	e5cd3000	 strb        r3, [sp]
  00040	eb000000	 bl          |?WriteTwlReg@@YAHKPAEI@Z|

; 775  :         SetGpioBankPowerState(id, D4);
; 776  :         rc = TRUE;

  00044	e3a00001	 mov         r0, #1
  00048		 |$LN1@Tps659xxGp@14|

; 777  :         }
; 778  : 
; 779  :     return rc;
; 780  : }

  00048	e28dd004	 add         sp, sp, #4
  0004c	e49de004	 ldr         lr, [sp], #4
  00050	e12fff1e	 bx          lr
  00054		 |$LN11@Tps659xxGp@14|
  00054		 |$LN12@Tps659xxGp@14|
  00054	00000000	 DCD         |s_rgGpioRegs|
  00058		 |$M38083|

			 ENDP  ; |?Tps659xxGpioClrBit@@YAHPAXI@Z|, Tps659xxGpioClrBit


  00000			 AREA	 |.pdata|, PDATA
|$T38106| DCD	|$LN12@Tps659xxGp@15|
	DCD	0x40001702
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Tps659xxGpioGetBit@@YAKPAXI@Z| PROC	; Tps659xxGpioGetBit

; 791  : {    

  00000		 |$LN12@Tps659xxGp@15|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M38103|
  00008	e1a04001	 mov         r4, r1

; 792  :     DWORD value = (DWORD) -1;

  0000c	e3e00000	 mvn         r0, #0

; 793  :     UINT bit = GPIO_BIT(id);
; 794  :     UINT bank = GPIO_BANK(id);
; 795  : 
; 796  :     UNREFERENCED_PARAMETER(context);
; 797  :     if (id < TPS659XX_MAX_GPIO_COUNT)

  00010	e3540012	 cmp         r4, #0x12
  00014	2a00000c	 bcs         |$LN5@Tps659xxGp@15|

; 798  :         {
; 799  :         UINT8 val;
; 800  :         SetGpioBankPowerState(id, D0);
; 801  :         ReadTwlReg(s_rgGpioRegs[bank].GPIODATAIN, &val, sizeof(val));

  00018	e59f2038	 ldr         r2, [pc, #0x38]
  0001c	e1a031a4	 mov         r3, r4, lsr #3
  00020	e0833103	 add         r3, r3, r3, lsl #2
  00024	e7920183	 ldr         r0, [r2, +r3, lsl #3]
  00028	e3a02001	 mov         r2, #1
  0002c	e28d1000	 add         r1, sp, #0
  00030	eb000000	 bl          |?ReadTwlReg@@YAHKPAEI@Z|

; 802  :         value = (val & (1 << bit)) ? 1 : 0;

  00034	e5dd2000	 ldrb        r2, [sp]
  00038	e2043007	 and         r3, r4, #7
  0003c	e3a01001	 mov         r1, #1
  00040	e1120311	 tst         r2, r1, lsl r3
  00044	13a00001	 movne       r0, #1
  00048	03a00000	 moveq       r0, #0
  0004c		 |$LN5@Tps659xxGp@15|

; 803  :         SetGpioBankPowerState(id, D4);        
; 804  :         }
; 805  : 
; 806  :     return value;
; 807  : }

  0004c	e28dd004	 add         sp, sp, #4
  00050	e8bd4010	 ldmia       sp!, {r4, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$LN13@Tps659xxGp@15|
  00058		 |$LN14@Tps659xxGp@15|
  00058	00000000	 DCD         |s_rgGpioRegs|
  0005c		 |$M38104|

			 ENDP  ; |?Tps659xxGpioGetBit@@YAKPAXI@Z|, Tps659xxGpioGetBit

	IMPORT	|GetCallerProcess|
	IMPORT	|SetLastError|
	IMPORT	|CeSafeCopyMemory|
; File c:\wince600\public\common\sdk\inc\objbase.h

  00000			 AREA	 |.pdata|, PDATA
|$T38148| DCD	|$LN52@Tps659xxGp@16|
	DCD	0x4000ed02
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\tps659xx\gpio\tps659xx_gpio.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Tps659xxGpioIoControl@@YAHPAXIPAEI1IPAK@Z| PROC ; Tps659xxGpioIoControl

; 825  : {

  00000		 |$LN52@Tps659xxGp@16|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd058	 sub         sp, sp, #0x58
  00008		 |$M38145|
  00008	e1a04000	 mov         r4, r0
  0000c	e58d400c	 str         r4, [sp, #0xC]
  00010	e1a06003	 mov         r6, r3
  00014	e1a05002	 mov         r5, r2
  00018	e3a03822	 mov         r3, #0x22, 16

; 826  : #ifdef DEVICE
; 827  :     UINT id;
; 828  :     DWORD value,mode;
; 829  :     DEVICE_IFC_GPIO ifc;
; 830  :     BOOL rc = FALSE;
; 831  : //    Tps659xxGpioDevice_t *pDevice = (Tps659xxGpioDevice_t*)context;
; 832  : 
; 833  :     UNREFERENCED_PARAMETER(pOutSize);
; 834  : 
; 835  :     DEBUGMSG(ZONE_FUNCTION, (
; 836  :         L"+Tps659xxGpioIOControl(0x%08x, 0x%08x, 0x%08x, %d, 0x%08x, %d, 0x%08x)\r\n",
; 837  :         context, code, pInBuffer, inSize, pOutBuffer, outSize, pOutSize
; 838  :         ));
; 839  : 
; 840  :     // Check if we get correct context
; 841  :     /*if ((pDevice == NULL) || (pDevice->cookie != GPIO_DEVICE_COOKIE))
; 842  :     {
; 843  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: Tps659xxGpioIOControl: "
; 844  :             L"Incorrect context parameter\r\n"
; 845  :             ));
; 846  :         goto cleanUp;
; 847  :     }*/
; 848  :     switch (code)

  0001c	e383eb01	 orr         lr, r3, #1, 22
  00020	e151000e	 cmp         r1, lr
  00024	0a000090	 beq         |$LN32@Tps659xxGp@16|
  00028	e3a03822	 mov         r3, #0x22, 16
  0002c	e383eb03	 orr         lr, r3, #3, 22
  00030	e151000e	 cmp         r1, lr
  00034	0a000079	 beq         |$LN22@Tps659xxGp@16|
  00038	e59fe370	 ldr         lr, [pc, #0x370]
  0003c	e151000e	 cmp         r1, lr
  00040	0a000063	 beq         |$LN18@Tps659xxGp@16|
  00044	e59fe360	 ldr         lr, [pc, #0x360]
  00048	e151000e	 cmp         r1, lr
  0004c	0a00003b	 beq         |$LN14@Tps659xxGp@16|
  00050	e3a03822	 mov         r3, #0x22, 16
  00054	e3833ec1	 orr         r3, r3, #0xC1, 28
  00058	e1510003	 cmp         r1, r3
  0005c	0a00001d	 beq         |$LN9@Tps659xxGp@16|
  00060	e59f3340	 ldr         r3, [pc, #0x340]
  00064	e1510003	 cmp         r1, r3
  00068	1a000055	 bne         |$LN45@Tps659xxGp@16|

; 954  :         rc = TRUE;
; 955  :         break;
; 956  : 
; 957  :     case IOCTL_GPIO_GETMODE:
; 958  :         if (pOutSize != 0) *pOutSize = sizeof(DWORD);

  0006c	e59d3084	 ldr         r3, [sp, #0x84]
  00070	e3530000	 cmp         r3, #0
  00074	13a02004	 movne       r2, #4
  00078	15832000	 strne       r2, [r3]

; 959  :         if ((pInBuffer == NULL) || (inSize < sizeof(DWORD)) ||
; 960  :             !CeSafeCopyMemory(&id, pInBuffer, sizeof(DWORD)) ||
; 961  :             (pOutBuffer == NULL) || (outSize < sizeof(DWORD)))

  0007c	e3550000	 cmp         r5, #0
  00080	0a00004d	 beq         |$LN28@Tps659xxGp@16|
  00084	e3560004	 cmp         r6, #4
  00088	3a00004b	 bcc         |$LN28@Tps659xxGp@16|
  0008c	e3a02004	 mov         r2, #4
  00090	e1a01005	 mov         r1, r5
  00094	e28d0000	 add         r0, sp, #0
  00098	eb000000	 bl          CeSafeCopyMemory
  0009c	e3500000	 cmp         r0, #0
  000a0	0a000045	 beq         |$LN28@Tps659xxGp@16|
  000a4	e59d507c	 ldr         r5, [sp, #0x7C]
  000a8	e3550000	 cmp         r5, #0
  000ac	0a000042	 beq         |$LN28@Tps659xxGp@16|
  000b0	e59d3080	 ldr         r3, [sp, #0x80]
  000b4	e3530004	 cmp         r3, #4
  000b8	3a00003f	 bcc         |$LN28@Tps659xxGp@16|

; 962  :         {
; 963  :             SetLastError(ERROR_INVALID_PARAMETER);
; 964  :             break;
; 965  :         }
; 966  :         mode = Tps659xxGpioGetMode(context, id);

  000bc	e59d1000	 ldr         r1, [sp]
  000c0	e1a00004	 mov         r0, r4
  000c4	eb000000	 bl          |?Tps659xxGpioGetMode@@YAKPAXI@Z|
  000c8	e1a03000	 mov         r3, r0

; 967  :         if (!CeSafeCopyMemory(pOutBuffer, &mode, sizeof(mode)))

  000cc	e58d3004	 str         r3, [sp, #4]
  000d0	e28d1004	 add         r1, sp, #4

; 968  :         {
; 969  :             SetLastError(ERROR_INVALID_PARAMETER);
; 970  :             break;

  000d4	ea000033	 b           |$LN49@Tps659xxGp@16|
  000d8		 |$LN9@Tps659xxGp@16|

; 933  :         {
; 934  :             SetLastError(ERROR_INVALID_PARAMETER);
; 935  :             break;
; 936  :         }
; 937  :         rc = TRUE;
; 938  :         break;
; 939  : 
; 940  :     case IOCTL_GPIO_SETMODE:
; 941  :         if (pOutSize != 0) *pOutSize = 0;

  000d8	e59d3084	 ldr         r3, [sp, #0x84]
  000dc	e3530000	 cmp         r3, #0
  000e0	13a02000	 movne       r2, #0
  000e4	15832000	 strne       r2, [r3]

; 942  :         if ((pInBuffer == NULL) || (inSize < 2 * sizeof(DWORD)) ||
; 943  :             !CeSafeCopyMemory(
; 944  :             &id, &((DWORD*)pInBuffer)[0], sizeof(DWORD)
; 945  :             ) ||
; 946  :             !CeSafeCopyMemory(
; 947  :             &mode, &((DWORD*)pInBuffer)[1], sizeof(DWORD)
; 948  :             ))

  000e8	e3550000	 cmp         r5, #0
  000ec	0a000032	 beq         |$LN28@Tps659xxGp@16|
  000f0	e3560008	 cmp         r6, #8
  000f4	3a000030	 bcc         |$LN28@Tps659xxGp@16|
  000f8	e3a02004	 mov         r2, #4
  000fc	e1a01005	 mov         r1, r5
  00100	e28d0000	 add         r0, sp, #0
  00104	eb000000	 bl          CeSafeCopyMemory
  00108	e3500000	 cmp         r0, #0
  0010c	0a00002a	 beq         |$LN28@Tps659xxGp@16|
  00110	e3a02004	 mov         r2, #4
  00114	e2851004	 add         r1, r5, #4
  00118	e28d0004	 add         r0, sp, #4
  0011c	eb000000	 bl          CeSafeCopyMemory
  00120	e3500000	 cmp         r0, #0
  00124	0a000024	 beq         |$LN28@Tps659xxGp@16|

; 949  :         {
; 950  :             SetLastError(ERROR_INVALID_PARAMETER);
; 951  :             break;
; 952  :         }
; 953  :         Tps659xxGpioSetMode(context, id, mode);

  00128	e59d2004	 ldr         r2, [sp, #4]
  0012c	e59d1000	 ldr         r1, [sp]
  00130	e1a00004	 mov         r0, r4
  00134	eb000000	 bl          |?Tps659xxGpioSetMode@@YAHPAXII@Z|
  00138	e3a00001	 mov         r0, #1
  0013c	ea000021	 b           |$cleanUp$37455|
  00140		 |$LN14@Tps659xxGp@16|

; 919  :         rc = TRUE;
; 920  :         break;
; 921  : 
; 922  :     case IOCTL_GPIO_GETBIT:
; 923  :         if (pOutSize != 0) *pOutSize = sizeof(DWORD);

  00140	e59d3084	 ldr         r3, [sp, #0x84]
  00144	e3530000	 cmp         r3, #0
  00148	13a02004	 movne       r2, #4
  0014c	15832000	 strne       r2, [r3]

; 924  :         if ((pInBuffer == NULL) || (inSize < sizeof(DWORD)) ||
; 925  :             !CeSafeCopyMemory(&id, pInBuffer, sizeof(DWORD)) ||
; 926  :             (pOutBuffer == NULL) || (outSize < sizeof(DWORD)))

  00150	e3550000	 cmp         r5, #0
  00154	0a000018	 beq         |$LN28@Tps659xxGp@16|
  00158	e3560004	 cmp         r6, #4
  0015c	3a000016	 bcc         |$LN28@Tps659xxGp@16|
  00160	e3a02004	 mov         r2, #4
  00164	e1a01005	 mov         r1, r5
  00168	e28d0000	 add         r0, sp, #0
  0016c	eb000000	 bl          CeSafeCopyMemory
  00170	e3500000	 cmp         r0, #0
  00174	0a000010	 beq         |$LN28@Tps659xxGp@16|
  00178	e59d507c	 ldr         r5, [sp, #0x7C]
  0017c	e3550000	 cmp         r5, #0
  00180	0a00000d	 beq         |$LN28@Tps659xxGp@16|
  00184	e59d3080	 ldr         r3, [sp, #0x80]
  00188	e3530004	 cmp         r3, #4
  0018c	3a00000a	 bcc         |$LN28@Tps659xxGp@16|

; 927  :         {
; 928  :             SetLastError(ERROR_INVALID_PARAMETER);
; 929  :             break;
; 930  :         }
; 931  :         value = Tps659xxGpioGetBit(context, id);

  00190	e59d1000	 ldr         r1, [sp]
  00194	e1a00004	 mov         r0, r4
  00198	eb000000	 bl          |?Tps659xxGpioGetBit@@YAKPAXI@Z|
  0019c	e1a03000	 mov         r3, r0

; 932  :         if (!CeSafeCopyMemory(pOutBuffer, &value, sizeof(value)))

  001a0	e58d3008	 str         r3, [sp, #8]
  001a4	e28d1008	 add         r1, sp, #8
  001a8		 |$LN49@Tps659xxGp@16|
  001a8	e3a02004	 mov         r2, #4
  001ac	e1a00005	 mov         r0, r5
  001b0	eb000000	 bl          CeSafeCopyMemory
  001b4	e3500000	 cmp         r0, #0
  001b8	1a00006a	 bne         |$LN47@Tps659xxGp@16|
  001bc		 |$LN28@Tps659xxGp@16|

; 863  :         {
; 864  :             SetLastError(ERROR_INVALID_PARAMETER);

  001bc	e3a00057	 mov         r0, #0x57
  001c0		 |$LN46@Tps659xxGp@16|
  001c0	eb000000	 bl          SetLastError
  001c4		 |$LN45@Tps659xxGp@16|
  001c4	e3a00000	 mov         r0, #0
  001c8		 |$cleanUp$37455|

; 971  :         }
; 972  :         rc = TRUE;
; 973  :         break;
; 974  :     }
; 975  : 
; 976  : cleanUp:
; 977  :     DEBUGMSG(ZONE_FUNCTION, (L"-Tps659xxGpioIOControl(rc = %d)\r\n", rc));
; 978  :     return rc;
; 979  : #endif
; 980  : 
; 981  : #ifdef OAL
; 982  :     UNREFERENCED_PARAMETER(context);
; 983  :     UNREFERENCED_PARAMETER(code);
; 984  :     UNREFERENCED_PARAMETER(pInBuffer);
; 985  :     UNREFERENCED_PARAMETER(inSize);
; 986  :     UNREFERENCED_PARAMETER(pOutBuffer);
; 987  :     UNREFERENCED_PARAMETER(outSize);
; 988  :     UNREFERENCED_PARAMETER(pOutSize);        
; 989  :     return FALSE;
; 990  : #endif
; 991  : }

  001c8	e28dd058	 add         sp, sp, #0x58
  001cc	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  001d0	e12fff1e	 bx          lr
  001d4		 |$LN18@Tps659xxGp@16|

; 907  :         rc = TRUE;
; 908  :         break;
; 909  : 
; 910  :     case IOCTL_GPIO_CLRBIT:
; 911  :         if (pOutSize != 0) *pOutSize = 0;

  001d4	e59d3084	 ldr         r3, [sp, #0x84]
  001d8	e3530000	 cmp         r3, #0
  001dc	13a02000	 movne       r2, #0
  001e0	15832000	 strne       r2, [r3]

; 912  :         if ((pInBuffer == NULL) || (inSize < sizeof(DWORD)) ||
; 913  :             !CeSafeCopyMemory(&id, pInBuffer, sizeof(DWORD)))

  001e4	e3550000	 cmp         r5, #0
  001e8	0afffff3	 beq         |$LN28@Tps659xxGp@16|
  001ec	e3560004	 cmp         r6, #4
  001f0	3afffff1	 bcc         |$LN28@Tps659xxGp@16|
  001f4	e3a02004	 mov         r2, #4
  001f8	e1a01005	 mov         r1, r5
  001fc	e28d0000	 add         r0, sp, #0
  00200	eb000000	 bl          CeSafeCopyMemory
  00204	e3500000	 cmp         r0, #0
  00208	0affffeb	 beq         |$LN28@Tps659xxGp@16|

; 914  :         {
; 915  :             SetLastError(ERROR_INVALID_PARAMETER);
; 916  :             break;
; 917  :         }
; 918  :         Tps659xxGpioClrBit(context, id);

  0020c	e59d1000	 ldr         r1, [sp]
  00210	e1a00004	 mov         r0, r4
  00214	eb000000	 bl          |?Tps659xxGpioClrBit@@YAHPAXI@Z|
  00218	e3a00001	 mov         r0, #1
  0021c	eaffffe9	 b           |$cleanUp$37455|
  00220		 |$LN22@Tps659xxGp@16|

; 894  :         }
; 895  :         SetLastError(ERROR_INVALID_PARAMETER);
; 896  :         break;
; 897  : 
; 898  :     case IOCTL_GPIO_SETBIT:
; 899  :         if (pOutSize != 0) *pOutSize = 0;

  00220	e59d3084	 ldr         r3, [sp, #0x84]
  00224	e3530000	 cmp         r3, #0
  00228	13a02000	 movne       r2, #0
  0022c	15832000	 strne       r2, [r3]

; 900  :         if ((pInBuffer == NULL) || (inSize < sizeof(DWORD)) ||
; 901  :             !CeSafeCopyMemory(&id, pInBuffer, sizeof(DWORD)))

  00230	e3550000	 cmp         r5, #0
  00234	0affffe0	 beq         |$LN28@Tps659xxGp@16|
  00238	e3560004	 cmp         r6, #4
  0023c	3affffde	 bcc         |$LN28@Tps659xxGp@16|
  00240	e3a02004	 mov         r2, #4
  00244	e1a01005	 mov         r1, r5
  00248	e28d0000	 add         r0, sp, #0
  0024c	eb000000	 bl          CeSafeCopyMemory
  00250	e3500000	 cmp         r0, #0
  00254	0affffd8	 beq         |$LN28@Tps659xxGp@16|

; 902  :         {
; 903  :             SetLastError(ERROR_INVALID_PARAMETER);
; 904  :             break;
; 905  :         }
; 906  :         Tps659xxGpioSetBit(context, id);

  00258	e59d1000	 ldr         r1, [sp]
  0025c	e1a00004	 mov         r0, r4
  00260	eb000000	 bl          |?Tps659xxGpioSetBit@@YAHPAXI@Z|
  00264	e3a00001	 mov         r0, #1
  00268	eaffffd6	 b           |$cleanUp$37455|
  0026c		 |$LN32@Tps659xxGp@16|

; 849  :     {
; 850  :     case IOCTL_DDK_GET_DRIVER_IFC:
; 851  :         // We can give interface only to our peer in device process
; 852  :         if (GetCurrentProcessId() != (DWORD)GetCallerProcess())

  0026c	e3a0000c	 mov         r0, #0xC
  00270	eb000000	 bl          __GetUserKData
  00274	e1a04000	 mov         r4, r0
  00278	eb000000	 bl          GetCallerProcess
  0027c	e1540000	 cmp         r4, r0

; 853  :         {
; 854  :             DEBUGMSG(ZONE_ERROR, (L"ERROR: GIO_IOControl: "
; 855  :                 L"IOCTL_DDK_GET_DRIVER_IFC can be called only from "
; 856  :                 L"device process (caller process id 0x%08x)\r\n",
; 857  :                 GetCurrentProcessId()
; 858  :                 ));
; 859  :             SetLastError(ERROR_ACCESS_DENIED);

  00280	13a00005	 movne       r0, #5
  00284	1affffcd	 bne         |$LN46@Tps659xxGp@16|

; 860  :             goto cleanUp;
; 861  :         }
; 862  :         if ((pInBuffer == NULL) || (inSize < sizeof(GUID)))

  00288	e3550000	 cmp         r5, #0
  0028c	0affffca	 beq         |$LN28@Tps659xxGp@16|
  00290	e3560010	 cmp         r6, #0x10
  00294	3affffc8	 bcc         |$LN28@Tps659xxGp@16|

; 865  :             break;
; 866  :         }
; 867  :         if (IsEqualGUID(*(GUID*)pInBuffer, DEVICE_IFC_GPIO_GUID))

  00298	e59f1104	 ldr         r1, [pc, #0x104]
  0029c	e3a02010	 mov         r2, #0x10
  002a0	e1a00005	 mov         r0, r5
  002a4	eb000000	 bl          memcmp
  002a8	e3500000	 cmp         r0, #0
  002ac	1affffc2	 bne         |$LN28@Tps659xxGp@16|

; 868  :         {
; 869  :             if (pOutSize != NULL) *pOutSize = sizeof(DEVICE_IFC_GPIO);

  002b0	e59d3084	 ldr         r3, [sp, #0x84]
  002b4	e3530000	 cmp         r3, #0
  002b8	13a02048	 movne       r2, #0x48
  002bc	15832000	 strne       r2, [r3]

; 870  :             if ((pOutBuffer == NULL) || (outSize < sizeof(DEVICE_IFC_GPIO)))

  002c0	e59d307c	 ldr         r3, [sp, #0x7C]
  002c4	e3530000	 cmp         r3, #0
  002c8	0affffbb	 beq         |$LN28@Tps659xxGp@16|
  002cc	e59d3080	 ldr         r3, [sp, #0x80]
  002d0	e3530048	 cmp         r3, #0x48
  002d4	3affffb8	 bcc         |$LN28@Tps659xxGp@16|

; 871  :             {
; 872  :                 SetLastError(ERROR_INVALID_PARAMETER);
; 873  :                 break;
; 874  :             }
; 875  :             ifc.context                 = context;
; 876  :             ifc.pfnSetBit               = Tps659xxGpioSetBit;
; 877  :             ifc.pfnClrBit               = Tps659xxGpioClrBit;
; 878  :             ifc.pfnGetBit               = Tps659xxGpioGetBit;
; 879  :             ifc.pfnSetMode              = Tps659xxGpioSetMode;
; 880  :             ifc.pfnGetMode              = Tps659xxGpioGetMode;
; 881  :             ifc.pfnPullup               = Tps659xxGpioPullup;
; 882  :             ifc.pfnPulldown             = Tps659xxGpioPulldown;
; 883  :             ifc.pfnInterruptInitialize  = Tps659xxGpioInterruptInitialize;
; 884  :             ifc.pfnInterruptMask        = Tps659xxGpioInterruptMask;
; 885  :             ifc.pfnInterruptDisable     = Tps659xxGpioInterruptDisable;
; 886  :             ifc.pfnInterruptDone        = Tps659xxGpioInterruptDone;
; 887  : 			ifc.pfnGetSystemIrq			= NULL;
; 888  :             ifc.pfnInterruptWakeUp      = Tps659xxGpioWakeEnable;
; 889  :             ifc.pfnIoControl            = Tps659xxGpioIoControl;

  002d8	e59f30c0	 ldr         r3, [pc, #0xC0]
  002dc	e59f00b8	 ldr         r0, [pc, #0xB8]
  002e0	e59f20b0	 ldr         r2, [pc, #0xB0]
  002e4	e58d3020	 str         r3, [sp, #0x20]

; 890  : 
; 891  :             if (!CeSafeCopyMemory(pOutBuffer, &ifc, sizeof(ifc))) break;

  002e8	e59d300c	 ldr         r3, [sp, #0xC]
  002ec	e59f10a0	 ldr         r1, [pc, #0xA0]
  002f0	e59fe098	 ldr         lr, [pc, #0x98]
  002f4	e59f4090	 ldr         r4, [pc, #0x90]
  002f8	e59f5088	 ldr         r5, [pc, #0x88]
  002fc	e59f6080	 ldr         r6, [pc, #0x80]
  00300	e59f7078	 ldr         r7, [pc, #0x78]
  00304	e59f8070	 ldr         r8, [pc, #0x70]
  00308	e59f9068	 ldr         r9, [pc, #0x68]
  0030c	e59fa060	 ldr         r10, [pc, #0x60]
  00310	e59fb058	 ldr         r11, [pc, #0x58]
  00314	e58d003c	 str         r0, [sp, #0x3C]
  00318	e59d007c	 ldr         r0, [sp, #0x7C]
  0031c	e58d3010	 str         r3, [sp, #0x10]
  00320	e3a03000	 mov         r3, #0
  00324	e58d2024	 str         r2, [sp, #0x24]
  00328	e58d1028	 str         r1, [sp, #0x28]
  0032c	e3a02048	 mov         r2, #0x48
  00330	e28d1010	 add         r1, sp, #0x10
  00334	e58d3050	 str         r3, [sp, #0x50]
  00338	e58de02c	 str         lr, [sp, #0x2C]
  0033c	e58d4030	 str         r4, [sp, #0x30]
  00340	e58d5034	 str         r5, [sp, #0x34]
  00344	e58d6038	 str         r6, [sp, #0x38]
  00348	e58d7040	 str         r7, [sp, #0x40]
  0034c	e58d8044	 str         r8, [sp, #0x44]
  00350	e58d9048	 str         r9, [sp, #0x48]
  00354	e58da04c	 str         r10, [sp, #0x4C]
  00358	e58db054	 str         r11, [sp, #0x54]
  0035c	eb000000	 bl          CeSafeCopyMemory
  00360	e3500000	 cmp         r0, #0
  00364	0affff96	 beq         |$LN45@Tps659xxGp@16|
  00368		 |$LN47@Tps659xxGp@16|

; 892  :             rc = TRUE;

  00368	e3a00001	 mov         r0, #1

; 893  :             break;

  0036c	eaffff95	 b           |$cleanUp$37455|
  00370		 |$LN53@Tps659xxGp@16|
  00370		 |$LN54@Tps659xxGp@16|
  00370	00000000	 DCD         |?Tps659xxGpioWakeEnable@@YAHPAXKKH@Z|
  00374		 |$LN55@Tps659xxGp@16|
  00374	00000000	 DCD         |?Tps659xxGpioInterruptDone@@YAXPAXKK@Z|
  00378		 |$LN56@Tps659xxGp@16|
  00378	00000000	 DCD         |?Tps659xxGpioInterruptDisable@@YAXPAXKK@Z|
  0037c		 |$LN57@Tps659xxGp@16|
  0037c	00000000	 DCD         |?Tps659xxGpioInterruptMask@@YAXPAXKKH@Z|
  00380		 |$LN58@Tps659xxGp@16|
  00380	00000000	 DCD         |?Tps659xxGpioInterruptInitialize@@YAHPAXKPAK0@Z|
  00384		 |$LN59@Tps659xxGp@16|
  00384	00000000	 DCD         |?Tps659xxGpioPulldown@@YAHPAXII@Z|
  00388		 |$LN60@Tps659xxGp@16|
  00388	00000000	 DCD         |?Tps659xxGpioPullup@@YAHPAXII@Z|
  0038c		 |$LN61@Tps659xxGp@16|
  0038c	00000000	 DCD         |?Tps659xxGpioGetMode@@YAKPAXI@Z|
  00390		 |$LN62@Tps659xxGp@16|
  00390	00000000	 DCD         |?Tps659xxGpioSetMode@@YAHPAXII@Z|
  00394		 |$LN63@Tps659xxGp@16|
  00394	00000000	 DCD         |?Tps659xxGpioGetBit@@YAKPAXI@Z|
  00398		 |$LN64@Tps659xxGp@16|
  00398	00000000	 DCD         |?Tps659xxGpioClrBit@@YAHPAXI@Z|
  0039c		 |$LN65@Tps659xxGp@16|
  0039c	00000000	 DCD         |?Tps659xxGpioIoControl@@YAHPAXIPAEI1IPAK@Z|
  003a0		 |$LN66@Tps659xxGp@16|
  003a0	00000000	 DCD         |?Tps659xxGpioSetBit@@YAHPAXI@Z|
  003a4		 |$LN67@Tps659xxGp@16|
  003a4	00000000	 DCD         |DEVICE_IFC_GPIO_GUID|
  003a8		 |$LN68@Tps659xxGp@16|
  003a8	00220c14	 DCD         0x220c14
  003ac		 |$LN69@Tps659xxGp@16|
  003ac	00220c0c	 DCD         0x220c0c
  003b0		 |$LN70@Tps659xxGp@16|
  003b0	00220c04	 DCD         0x220c04
  003b4		 |$M38146|

			 ENDP  ; |?Tps659xxGpioIoControl@@YAHPAXIPAEI1IPAK@Z|, Tps659xxGpioIoControl


  00000			 AREA	 |.pdata|, PDATA
|$T38173| DCD	|$LN5@Tps659xxGp@17|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Tps659xxGpioPowerUp@@YAXPAX@Z| PROC	; Tps659xxGpioPowerUp

; 1004 : {

  00000		 |$LN5@Tps659xxGp@17|
  00000		 |$M38170|

; 1005 :     UNREFERENCED_PARAMETER(context);
; 1006 : }

  00000	e12fff1e	 bx          lr
  00004		 |$M38171|

			 ENDP  ; |?Tps659xxGpioPowerUp@@YAXPAX@Z|, Tps659xxGpioPowerUp


  00000			 AREA	 |.pdata|, PDATA
|$T38180| DCD	|$LN5@Tps659xxGp@18|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Tps659xxGpioPowerDown@@YAXPAX@Z| PROC ; Tps659xxGpioPowerDown

; 1018 : {

  00000		 |$LN5@Tps659xxGp@18|
  00000		 |$M38177|

; 1019 :     UNREFERENCED_PARAMETER(context);
; 1020 : }

  00000	e12fff1e	 bx          lr
  00004		 |$M38178|

			 ENDP  ; |?Tps659xxGpioPowerDown@@YAXPAX@Z|, Tps659xxGpioPowerDown

	EXPORT	|?GIO_Init@@YAKPBGK@Z|			; GIO_Init

  00000			 AREA	 |.pdata|, PDATA
|$T38196| DCD	|$LN11@GIO_Init|
	DCD	0x40000c02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GIO_Init@@YAKPBGK@Z| PROC		; GIO_Init

; 1030 : {

  00000		 |$LN11@GIO_Init|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M38193|

; 1031 :     HANDLE devCtxt;
; 1032 :     UINT count;
; 1033 : 
; 1034 :     UNREFERENCED_PARAMETER(dwBusContext);
; 1035 : 
; 1036 :     if (Tps659xxGpioInit(pContext,&devCtxt,&count))
; 1037 :     {
; 1038 :         if (Tps659xxGpioPostInit(devCtxt))

  00008	e59f401c	 ldr         r4, [pc, #0x1C]
  0000c	e1a00004	 mov         r0, r4
  00010	eb000000	 bl          InitializeCriticalSection
  00014	e3a03001	 mov         r3, #1

; 1039 :         {
; 1040 :             return (DWORD) devCtxt;

  00018	e59d0000	 ldr         r0, [sp]
  0001c	e5843018	 str         r3, [r4, #0x18]

; 1041 :         }
; 1042 :     }
; 1043 :     return NULL;
; 1044 : }

  00020	e28dd004	 add         sp, sp, #4
  00024	e8bd4010	 ldmia       sp!, {r4, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$LN12@GIO_Init|
  0002c		 |$LN13@GIO_Init|
  0002c	00000000	 DCD         |?csGpio@@3UCRITICAL_SECTION@@A|
  00030		 |$M38194|

			 ENDP  ; |?GIO_Init@@YAKPBGK@Z|, GIO_Init

	EXPORT	|?GIO_Deinit@@YAHK@Z|			; GIO_Deinit

  00000			 AREA	 |.pdata|, PDATA
|$T38208| DCD	|$LN5@GIO_Deinit|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GIO_Deinit@@YAHK@Z| PROC		; GIO_Deinit

; 1049 : {

  00000		 |$LN5@GIO_Deinit|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M38205|

; 1050 :     return Tps659xxGpioDeinit((HANDLE)hDeviceContext);

  00004	eb000000	 bl          |?Tps659xxGpioDeinit@@YAHPAX@Z|

; 1051 : }

  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M38206|

			 ENDP  ; |?GIO_Deinit@@YAHK@Z|, GIO_Deinit

	EXPORT	|?GIO_Open@@YAKKKK@Z|			; GIO_Open

  00000			 AREA	 |.pdata|, PDATA
|$T38218| DCD	|$LN5@GIO_Open|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GIO_Open@@YAKKKK@Z| PROC		; GIO_Open

; 1058 : {

  00000		 |$LN5@GIO_Open|
  00000		 |$M38215|

; 1059 :     UNREFERENCED_PARAMETER(AccessCode);
; 1060 :     UNREFERENCED_PARAMETER(ShareMode);
; 1061 :     return hDeviceContext;
; 1062 : }

  00000	e12fff1e	 bx          lr
  00004		 |$M38216|

			 ENDP  ; |?GIO_Open@@YAKKKK@Z|, GIO_Open

	EXPORT	|?GIO_Close@@YAHK@Z|			; GIO_Close

  00000			 AREA	 |.pdata|, PDATA
|$T38227| DCD	|$LN5@GIO_Close|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GIO_Close@@YAHK@Z| PROC		; GIO_Close

; 1067 : {

  00000		 |$LN5@GIO_Close|
  00000		 |$M38224|

; 1068 :     UNREFERENCED_PARAMETER(hOpenContext);
; 1069 :     return TRUE;

  00000	e3a00001	 mov         r0, #1

; 1070 : }

  00004	e12fff1e	 bx          lr
  00008		 |$M38225|

			 ENDP  ; |?GIO_Close@@YAHK@Z|, GIO_Close

	EXPORT	|?GIO_PowerDown@@YAXK@Z|		; GIO_PowerDown

  00000			 AREA	 |.pdata|, PDATA
|$T38237| DCD	|$LN7@GIO_PowerD|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GIO_PowerDown@@YAXK@Z| PROC		; GIO_PowerDown

; 1075 : {

  00000		 |$LN7@GIO_PowerD|
  00000		 |$M38234|

; 1076 :     Tps659xxGpioPowerDown((HANDLE) hDeviceContext);
; 1077 : }

  00000	e12fff1e	 bx          lr
  00004		 |$M38235|

			 ENDP  ; |?GIO_PowerDown@@YAXK@Z|, GIO_PowerDown

	EXPORT	|?GIO_PowerUp@@YAXK@Z|			; GIO_PowerUp

  00000			 AREA	 |.pdata|, PDATA
|$T38247| DCD	|$LN7@GIO_PowerU|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GIO_PowerUp@@YAXK@Z| PROC		; GIO_PowerUp

; 1081 : {

  00000		 |$LN7@GIO_PowerU|
  00000		 |$M38244|

; 1082 :     Tps659xxGpioPowerUp((HANDLE) hDeviceContext);
; 1083 : }

  00000	e12fff1e	 bx          lr
  00004		 |$M38245|

			 ENDP  ; |?GIO_PowerUp@@YAXK@Z|, GIO_PowerUp

	EXPORT	|?GIO_IOControl@@YAHKKPAEK0KPAK@Z|	; GIO_IOControl

  00000			 AREA	 |.pdata|, PDATA
|$T38260| DCD	|$LN5@GIO_IOCont|
	DCD	0x40000c02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GIO_IOControl@@YAHKKPAEK0KPAK@Z| PROC ; GIO_IOControl

; 1096 : {

  00000		 |$LN5@GIO_IOCont|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd00c	 sub         sp, sp, #0xC
  00008		 |$M38257|

; 1097 :     return Tps659xxGpioIoControl(
; 1098 :         (HANDLE)hOpenContext,
; 1099 :         dwCode,
; 1100 :         pBufIn,
; 1101 :         dwLenIn,
; 1102 :         pBufOut,
; 1103 :         dwLenOut,
; 1104 :         pdwActualOut 
; 1105 :         );

  00008	e59de020	 ldr         lr, [sp, #0x20]
  0000c	e59d401c	 ldr         r4, [sp, #0x1C]
  00010	e59d5018	 ldr         r5, [sp, #0x18]
  00014	e58de008	 str         lr, [sp, #8]
  00018	e58d4004	 str         r4, [sp, #4]
  0001c	e58d5000	 str         r5, [sp]
  00020	eb000000	 bl          |?Tps659xxGpioIoControl@@YAHPAXIPAEI1IPAK@Z|

; 1106 : }

  00024	e28dd00c	 add         sp, sp, #0xC
  00028	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M38258|

			 ENDP  ; |?GIO_IOControl@@YAHKKPAEK0KPAK@Z|, GIO_IOControl

	END
