; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\Z2170P\SRC\BOOTLOADER\EBOOT\hotkey.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|??_C@_1CE@DFLFAFMD@?$AAE?$AAx?$AAi?$AAt?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@EJKOINNF@?$AAF?$AA3?$AA?5?$AA?$CL?$AA?5?$AAF?$AA4?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@NEKBGMKD@?$AAF?$AA2?$AA?5?$AA?$CL?$AA?5?$AAF?$AA4?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@EJHGFEBK@?$AAF?$AA2?$AA?5?$AA?$CL?$AA?5?$AAF?$AA3?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@KIMAEJHI@?$AAF?$AA1?$AA?5?$AA?$CL?$AA?5?$AAF?$AA4?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@DFBHHBMB@?$AAF?$AA1?$AA?5?$AA?$CL?$AA?5?$AAF?$AA3?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@INKLBGKE@?$AAF?$AA1?$AA?5?$AA?$CL?$AA?5?$AAF?$AA2?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_15OIHFNINL@?$AAF?$AA4?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BC@BIAHJJFB@?$AAR?$AAe?$AAs?$AAe?$AAr?$AAv?$AAe?$AAd?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_15MNBOIHAH@?$AAF?$AA2?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BG@GJMFNPPP@?$AAF?$AA1?$AA?5?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAs?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|g_d1Sec| [ DATA ]
	EXPORT	|pMenu| [ DATA ]
	EXPORT	|hotkeyColdReset| [ DATA ]

  00000			 AREA	 |.data|, DATA
	 COMMON	|ghTwl|, 0x4

	 COMMON	|gMatrix|, 0x8


  00000			 AREA	 |.bss|, NOINIT
|pMenu|	%	0x4

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@DFLFAFMD@?$AAE?$AAx?$AAi?$AAt?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AA?$AA@| DCB "E"
	DCB	0x0, "x", 0x0, "i", 0x0, "t", 0x0, " ", 0x0, "a", 0x0, "n"
	DCB	0x0, "d", 0x0, " ", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "u", 0x0, "e", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@EJKOINNF@?$AAF?$AA3?$AA?5?$AA?$CL?$AA?5?$AAF?$AA4?$AA?$AA@| DCB "F"
	DCB	0x0, "3", 0x0, " ", 0x0, "+", 0x0, " ", 0x0, "F", 0x0, "4"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@NEKBGMKD@?$AAF?$AA2?$AA?5?$AA?$CL?$AA?5?$AAF?$AA4?$AA?$AA@| DCB "F"
	DCB	0x0, "2", 0x0, " ", 0x0, "+", 0x0, " ", 0x0, "F", 0x0, "4"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@EJHGFEBK@?$AAF?$AA2?$AA?5?$AA?$CL?$AA?5?$AAF?$AA3?$AA?$AA@| DCB "F"
	DCB	0x0, "2", 0x0, " ", 0x0, "+", 0x0, " ", 0x0, "F", 0x0, "3"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@KIMAEJHI@?$AAF?$AA1?$AA?5?$AA?$CL?$AA?5?$AAF?$AA4?$AA?$AA@| DCB "F"
	DCB	0x0, "1", 0x0, " ", 0x0, "+", 0x0, " ", 0x0, "F", 0x0, "4"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@DFBHHBMB@?$AAF?$AA1?$AA?5?$AA?$CL?$AA?5?$AAF?$AA3?$AA?$AA@| DCB "F"
	DCB	0x0, "1", 0x0, " ", 0x0, "+", 0x0, " ", 0x0, "F", 0x0, "3"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@INKLBGKE@?$AAF?$AA1?$AA?5?$AA?$CL?$AA?5?$AAF?$AA2?$AA?$AA@| DCB "F"
	DCB	0x0, "1", 0x0, " ", 0x0, "+", 0x0, " ", 0x0, "F", 0x0, "2"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_15OIHFNINL@?$AAF?$AA4?$AA?$AA@| DCB "F", 0x0, "4", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BC@BIAHJJFB@?$AAR?$AAe?$AAs?$AAe?$AAr?$AAv?$AAe?$AAd?$AA?$AA@| DCB "R"
	DCB	0x0, "e", 0x0, "s", 0x0, "e", 0x0, "r", 0x0, "v", 0x0, "e"
	DCB	0x0, "d", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_15MNBOIHAH@?$AAF?$AA2?$AA?$AA@| DCB "F", 0x0, "2", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@GJMFNPPP@?$AAF?$AA1?$AA?5?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAs?$AA?$AA@| DCB "F"
	DCB	0x0, "1", 0x0, " ", 0x0, "U", 0x0, "p", 0x0, "d", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, "s", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.data|, DATA
|g_d1Sec| DCD	0xf4240
	%	4
|hotkeyColdReset| DCD 0x0
	DCD	|??_C@_1BG@GJMFNPPP@?$AAF?$AA1?$AA?5?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAs?$AA?$AA@|
	DCD	0x1
	DCD	|??_C@_15MNBOIHAH@?$AAF?$AA2?$AA?$AA@|
	DCD	0x2
	DCD	|??_C@_1BC@BIAHJJFB@?$AAR?$AAe?$AAs?$AAe?$AAr?$AAv?$AAe?$AAd?$AA?$AA@|
	DCD	0x3
	DCD	|??_C@_15OIHFNINL@?$AAF?$AA4?$AA?$AA@|
	DCD	0x4
	DCD	|??_C@_1BA@INKLBGKE@?$AAF?$AA1?$AA?5?$AA?$CL?$AA?5?$AAF?$AA2?$AA?$AA@|
	DCD	0x5
	DCD	|??_C@_1BA@DFBHHBMB@?$AAF?$AA1?$AA?5?$AA?$CL?$AA?5?$AAF?$AA3?$AA?$AA@|
	DCD	0x6
	DCD	|??_C@_1BA@KIMAEJHI@?$AAF?$AA1?$AA?5?$AA?$CL?$AA?5?$AAF?$AA4?$AA?$AA@|
	DCD	0x7
	DCD	|??_C@_1BA@EJHGFEBK@?$AAF?$AA2?$AA?5?$AA?$CL?$AA?5?$AAF?$AA3?$AA?$AA@|
	DCD	0x8
	DCD	|??_C@_1BA@NEKBGMKD@?$AAF?$AA2?$AA?5?$AA?$CL?$AA?5?$AAF?$AA4?$AA?$AA@|
	DCD	0x9
	DCD	|??_C@_1BA@EJKOINNF@?$AAF?$AA3?$AA?5?$AA?$CL?$AA?5?$AAF?$AA4?$AA?$AA@|
	DCD	0xa
	DCD	|??_C@_1CE@DFLFAFMD@?$AAE?$AAx?$AAi?$AAt?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AA?$AA@|

  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|HotKeyInit|
	IMPORT	|TWLWriteRegs|
; File c:\wince600\platform\z2170p\src\bootloader\eboot\hotkey.c

  00000			 AREA	 |.pdata|, PDATA
|$T47501| DCD	|$LN5@HotKeyInit|
	DCD	0x40001402
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |HotKeyInit| PROC

; 75   : {

  00000		 |$LN5@HotKeyInit|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M47498|
  00008	e1a04000	 mov         r4, r0
  0000c	e3a05802	 mov         r5, #2, 16

; 76   : 	UINT8 regval;
; 77   : 	
; 78   : 	regval = TWL_KBD_CTRL_KBD_ON | TWL_KBD_CTRL_NRESET | TWL_KBD_CTRL_NSOFT_MODE;

  00010	e3a0e043	 mov         lr, #0x43

; 79   :     TWLWriteRegs(hTwl, TWL_KEYP_CTRL_REG, &regval, sizeof(regval));

  00014	e38510d2	 orr         r1, r5, #0xD2
  00018	e3a03001	 mov         r3, #1
  0001c	e28d2000	 add         r2, sp, #0
  00020	e5cde000	 strb        lr, [sp]
  00024	eb000000	 bl          TWLWriteRegs

; 80   : 	regval = 0x07 << 5;                        // Prescaler timer value

  00028	e3a030e0	 mov         r3, #0xE0
  0002c	e5cd3000	 strb        r3, [sp]

; 81   :     TWLWriteRegs(hTwl, TWL_LK_PTV_REG, &regval, sizeof(regval));

  00030	e3a03001	 mov         r3, #1
  00034	e28d2000	 add         r2, sp, #0
  00038	e38510d5	 orr         r1, r5, #0xD5
  0003c	e1a00004	 mov         r0, r4
  00040	eb000000	 bl          TWLWriteRegs

; 82   : }

  00044	e28dd004	 add         sp, sp, #4
  00048	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$M47499|

			 ENDP  ; |HotKeyInit|

	EXPORT	|matrixStatus|

  00000			 AREA	 |.pdata|, PDATA
|$T47512| DCD	|$LN7@matrixStat|
	DCD	0x40000800
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |matrixStatus| PROC

; 88   : {

  00000		 |$LN7@matrixStat|
  00000		 |$M47509|

; 89   :     int temp;
; 90   :     BOOL event = FALSE;
; 91   :     
; 92   :     temp = gMatrix[row] & shiftLeft(col);
; 93   :  
; 94   :     if(temp)

  00000	e59f3014	 ldr         r3, [pc, #0x14]
  00004	e3a02001	 mov         r2, #1
  00008	e7d03003	 ldrb        r3, [r0, +r3]
  0000c	e1130112	 tst         r3, r2, lsl r1

; 95   :         return event = TRUE;

  00010	13a00001	 movne       r0, #1

; 96   :     else
; 97   :         return event;

  00014	03a00000	 moveq       r0, #0

; 98   : }

  00018	e12fff1e	 bx          lr
  0001c		 |$LN8@matrixStat|
  0001c		 |$LN9@matrixStat|
  0001c	00000000	 DCD         |gMatrix|
  00020		 |$M47510|

			 ENDP  ; |matrixStatus|

	EXPORT	|HotKeyFunction|
	EXPORT	|??_C@_1DE@MDALDBDK@?$AAH?$AAo?$AAt?$AAK?$AAe?$AAy?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?5?$AA?$FL?$AA?$CF?$AAd?$AA?0?$AA?$CF?$AAd?$AA?$FN?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|FillASCIIMode|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|TWLReadRegs|

  00000			 AREA	 |.pdata|, PDATA
|$T47593| DCD	|$LN63@HotKeyFunc|
	DCD	0x40003701

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@MDALDBDK@?$AAH?$AAo?$AAt?$AAK?$AAe?$AAy?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?5?$AA?$FL?$AA?$CF?$AAd?$AA?0?$AA?$CF?$AAd?$AA?$FN?$AA?$AN?$AA?6?$AA?$AA@| DCB "H"
	DCB	0x0, "o", 0x0, "t", 0x0, "K", 0x0, "e", 0x0, "y", 0x0, "F"
	DCB	0x0, "u", 0x0, "n", 0x0, "c", 0x0, "t", 0x0, "i", 0x0, "o"
	DCB	0x0, "n", 0x0, ":", 0x0, " ", 0x0, "[", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, "%", 0x0, "d", 0x0, "]", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |HotKeyFunction| PROC

; 102  : {

  00000		 |$LN63@HotKeyFunc|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004		 |$M47590|

; 103  : 	//UINT8 matrix[8];
; 104  : 	ULONG ik, ix, row, column;
; 105  : 	//ULONG i;
; 106  :     USHORT state;
; 107  :     BOOL keyPressed = FALSE;
; 108  :     //WCHAR key; 
; 109  :     
; 110  :        
; 111  :     //Ray 131104
; 112  :     /*for(i=0; i<Hotkey_EXIT; i++)
; 113  :     {
; 114  : 		OALLog(L" [%d] %s\r\n", i+1, hotkeyColdReset[i].keyName);
; 115  : 	}
; 116  : 	OALLog(L" [0] Exit and Continue\r\n");
; 117  : 	
; 118  : 	OALLog(L"\r>>> Now entry cold-reset... \r\n");*/
; 119  : 	
; 120  :     //printing matrix array, Ray
; 121  : 	/*for( ik=0 ; ik<3 ; ik++ )
; 122  : 	{*/
; 123  :     TWLReadRegs(hTwl, TWL_LOGADDR_FULL_CODE_7_0, gMatrix, sizeof(gMatrix));    

  00004	e59f60cc	 ldr         r6, [pc, #0xCC]
  00008	e3a010db	 mov         r1, #0xDB
  0000c	e3a03008	 mov         r3, #8
  00010	e1a02006	 mov         r2, r6
  00014	e24118fe	 sub         r1, r1, #0xFE, 16
  00018	eb000000	 bl          TWLReadRegs

; 124  : 	/*//OALLog(L"******hTwl: %X....\r\n", hTwl);    //address-4, Ray
; 125  : 	    
; 126  : 		OALLog(L" HotKeyFunction: matrix  ");
; 127  : 		for( ix=0 ; ix <8 ; ix++ )
; 128  : 			OALLog(L" [%d]",gMatrix[ix]);
; 129  : 		OALLog(L"\r\n");
; 130  : 	}*/
; 131  : 	
; 132  : 	for(row = 0, ik = 0; row < 8; row++)

  0001c	e3a05000	 mov         r5, #0
  00020	e3a08001	 mov         r8, #1
  00024		 |$LL18@HotKeyFunc|

; 133  : 	{
; 134  :         // Get matrix state        
; 135  :         ix = row;
; 136  :         state = gMatrix[ix] & 0xFF;     

  00024	e7d57006	 ldrb        r7, [r5, +r6]

; 137  : 
; 138  :         // If no-key is pressed continue with new rows
; 139  :         if (state == 0) 

  00028	e3570000	 cmp         r7, #0
  0002c	0a000008	 beq         |$LN17@HotKeyFunc|

; 140  : 		{
; 141  :             ik += 8;
; 142  :             continue;               //if state event desnot 
; 143  : 		}
; 144  :         
; 145  :         for (column = 0; column < 8; column++, ik++)

  00030	e3a04000	 mov         r4, #0
  00034		 |$LL14@HotKeyFunc|

; 146  : 		{
; 147  :             if ((state & (1 << column)) != 0)

  00034	e1170418	 tst         r7, r8, lsl r4

; 148  : 			{
; 149  :                 RETAILMSG(TRUE, (L"HotKeyFunction: [%d,%d]\r\n",row ,column));

  00038	159f0094	 ldrne       r0, [pc, #0x94]
  0003c	11a02004	 movne       r2, r4
  00040	11a01005	 movne       r1, r5
  00044	1b000000	 blne        NKDbgPrintfW
  00048	e2844001	 add         r4, r4, #1
  0004c	e3540008	 cmp         r4, #8
  00050	3afffff7	 bcc         |$LL14@HotKeyFunc|
  00054		 |$LN17@HotKeyFunc|

; 124  : 	/*//OALLog(L"******hTwl: %X....\r\n", hTwl);    //address-4, Ray
; 125  : 	    
; 126  : 		OALLog(L" HotKeyFunction: matrix  ");
; 127  : 		for( ix=0 ; ix <8 ; ix++ )
; 128  : 			OALLog(L" [%d]",gMatrix[ix]);
; 129  : 		OALLog(L"\r\n");
; 130  : 	}*/
; 131  : 	
; 132  : 	for(row = 0, ik = 0; row < 8; row++)

  00054	e2855001	 add         r5, r5, #1
  00058	e3550008	 cmp         r5, #8
  0005c	3afffff0	 bcc         |$LL18@HotKeyFunc|
  00060	e5d62004	 ldrb        r2, [r6, #4]

; 150  : 			}
; 151  : 		}
; 152  : 	}
; 153  :    
; 154  :     //Ray 131106
; 155  :     if(matrixStatus(4, 2) && matrixStatus(4, 3)){               	//F1 + F2

  00064	e3120004	 tst         r2, #4
  00068	13120008	 tstne       r2, #8

; 156  :         keyPressed = FillASCIIMode(hotkeyColdReset[4].keyActive);    

  0006c	159f305c	 ldrne       r3, [pc, #0x5C]
  00070	15930020	 ldrne       r0, [r3, #0x20]
  00074	1a000012	 bne         |$LN60@HotKeyFunc|
  00078	e5d61003	 ldrb        r1, [r6, #3]

; 157  :     }else if(matrixStatus(3, 1) && matrixStatus(3, 2)){         	//F1 + F4

  0007c	e20130ff	 and         r3, r1, #0xFF
  00080	e2133002	 ands        r3, r3, #2
  00084	13110004	 tstne       r1, #4

; 158  :         keyPressed = FillASCIIMode(hotkeyColdReset[6].keyActive);              

  00088	159f3040	 ldrne       r3, [pc, #0x40]
  0008c	15930030	 ldrne       r0, [r3, #0x30]
  00090	1a00000b	 bne         |$LN60@HotKeyFunc|

; 159  :     }else if( matrixStatus(3, 2)){                              	//F1   

  00094	e3110004	 tst         r1, #4

; 160  :         keyPressed = FillASCIIMode(hotkeyColdReset[0].keyActive);     

  00098	159f3030	 ldrne       r3, [pc, #0x30]
  0009c	15930000	 ldrne       r0, [r3]
  000a0	1a000007	 bne         |$LN60@HotKeyFunc|

; 161  :     }else if( matrixStatus(4, 3)){                              	//F2

  000a4	e3120008	 tst         r2, #8

; 162  :         keyPressed = FillASCIIMode(hotkeyColdReset[1].keyActive);       

  000a8	159f3020	 ldrne       r3, [pc, #0x20]
  000ac	15930008	 ldrne       r0, [r3, #8]
  000b0	1a000003	 bne         |$LN60@HotKeyFunc|

; 163  :     }else if( matrixStatus(3, 1)){                              	//F4

  000b4	e3530000	 cmp         r3, #0
  000b8	0a000002	 beq         |$LN2@HotKeyFunc|

; 164  :         keyPressed = FillASCIIMode(hotkeyColdReset[3].keyActive);       

  000bc	e59f300c	 ldr         r3, [pc, #0xC]
  000c0	e5930018	 ldr         r0, [r3, #0x18]
  000c4		 |$LN60@HotKeyFunc|
  000c4	eb000000	 bl          FillASCIIMode
  000c8		 |$LN2@HotKeyFunc|

; 165  :     }
; 166  :         
; 167  :     /*do{   
; 168  :         key = OALBLMenuReadKey(TRUE);
; 169  : 	}while(key != L'0');*/
; 170  : 
; 171  : 	if (/*key == L'0' || */keyPressed == TRUE) return;
; 172  : }

  000c8	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  000cc	e12fff1e	 bx          lr
  000d0		 |$LN64@HotKeyFunc|
  000d0		 |$LN65@HotKeyFunc|
  000d0	00000000	 DCD         |hotkeyColdReset|
  000d4		 |$LN66@HotKeyFunc|
  000d4	00000000	 DCD         |??_C@_1DE@MDALDBDK@?$AAH?$AAo?$AAt?$AAK?$AAe?$AAy?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?5?$AA?$FL?$AA?$CF?$AAd?$AA?0?$AA?$CF?$AAd?$AA?$FN?$AA?$AN?$AA?6?$AA?$AA@|
  000d8		 |$LN67@HotKeyFunc|
  000d8	00000000	 DCD         |gMatrix|
  000dc		 |$M47591|

			 ENDP  ; |HotKeyFunction|

	EXPORT	|HotKeyColdReset|

  00000			 AREA	 |.pdata|, PDATA
|$T47605| DCD	|$LN5@HotKeyCold|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |HotKeyColdReset| PROC

; 176  : {

  00000		 |$LN5@HotKeyCold|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M47602|

; 177  :    HotKeyFunction(hTwl);

  00004	eb000000	 bl          HotKeyFunction

; 178  :    //OALLog(L"******hTwl: %X....\r\n", hTwl);       //address-3, Ray
; 179  : }

  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M47603|

			 ENDP  ; |HotKeyColdReset|

	EXPORT	|MenuSelectFunction|
	IMPORT	|DisplayTest_Z2170P|
	IMPORT	|BkTest_Z2170P|
	IMPORT	|DRAMTest_Z2170P|
	IMPORT	|KeypadBkTest_Z2170P|
	IMPORT	|TouchPanelTest_Z2170P|
	IMPORT	|BatteryTest_Z2170P|
	IMPORT	|LEDTest_Z2170P|
	IMPORT	|BarcodeTest_Z2170P|
	IMPORT	|KeypadFunc_Z2170P|
	IMPORT	|BurnIn_Z2170P|
	IMPORT	|RAMAccessTest|
	IMPORT	|AutoScanFunc|
	IMPORT	|RTCFunc|
	IMPORT	|LcdSleep|
	IMPORT	|AllFunctionTest_Z2170P|
	IMPORT	|BLShowMenu|

  00000			 AREA	 |.pdata|, PDATA
|$T47774| DCD	|$LN144@MenuSelect|
	DCD	0x40006c01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |MenuSelectFunction| PROC

; 185  : {

  00000		 |$LN144@MenuSelect|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004		 |$M47771|
  00004	e1a09000	 mov         r9, r0
  00008	e59f419c	 ldr         r4, [pc, #0x19C]
  0000c	e59f8194	 ldr         r8, [pc, #0x194]
  00010	e3a0b0db	 mov         r11, #0xDB
  00014	e3a0a001	 mov         r10, #1
  00018		 |$SHOW_MENU$47414|

; 186  :     ULONG ik, ix, row, column;
; 187  :     USHORT state;
; 188  :     //BOOL keyPressed = FALSE;
; 189  : SHOW_MENU:
; 190  :     BLShowMenu(); 

  00018	eb000000	 bl          BLShowMenu
  0001c		 |$LL37@MenuSelect|

; 191  :     for(;;)
; 192  :     {
; 193  :         TWLReadRegs(hTwl, TWL_LOGADDR_FULL_CODE_7_0, gMatrix, sizeof(gMatrix));  

  0001c	e3a03008	 mov         r3, #8
  00020	e1a02008	 mov         r2, r8
  00024	e24b18fe	 sub         r1, r11, #0xFE, 16
  00028	e1a00009	 mov         r0, r9
  0002c	eb000000	 bl          TWLReadRegs

; 194  :                 
; 195  :         for(row = 0, ik = 0; row < 8; row++)

  00030	e3a06000	 mov         r6, #0
  00034		 |$LL35@MenuSelect|

; 196  :     	{
; 197  :             // Get matrix state        
; 198  :             ix = row;
; 199  :             state = gMatrix[ix] & 0xFF;     

  00034	e7d67008	 ldrb        r7, [r6, +r8]

; 200  : 
; 201  :             // If no-key is pressed continue with new rows
; 202  :             if (state == 0) 

  00038	e3570000	 cmp         r7, #0
  0003c	0a000008	 beq         |$LN34@MenuSelect|

; 203  :     		{
; 204  :                 ik += 8;
; 205  :                 continue;               //if state event desnot 
; 206  :     		}
; 207  :             
; 208  :             for (column = 0; column < 8; column++, ik++)

  00040	e3a05000	 mov         r5, #0
  00044		 |$LL31@MenuSelect|

; 209  :     		{
; 210  :                 if ((state & (1 << column)) != 0)

  00044	e117051a	 tst         r7, r10, lsl r5

; 211  :     			{
; 212  :                     RETAILMSG(TRUE, (L"HotKeyFunction: [%d,%d]\r\n",row ,column));

  00048	159f0154	 ldrne       r0, [pc, #0x154]
  0004c	11a02005	 movne       r2, r5
  00050	11a01006	 movne       r1, r6
  00054	1b000000	 blne        NKDbgPrintfW
  00058	e2855001	 add         r5, r5, #1
  0005c	e3550008	 cmp         r5, #8
  00060	3afffff7	 bcc         |$LL31@MenuSelect|
  00064		 |$LN34@MenuSelect|

; 194  :                 
; 195  :         for(row = 0, ik = 0; row < 8; row++)

  00064	e2866001	 add         r6, r6, #1
  00068	e3560008	 cmp         r6, #8
  0006c	3afffff0	 bcc         |$LL35@MenuSelect|
  00070	e5d83002	 ldrb        r3, [r8, #2]

; 213  :     			}
; 214  :     		}
; 215  :     	}
; 216  :         
; 217  :         if(matrixStatus(2, 5) ){            //press number 1

  00074	e3130020	 tst         r3, #0x20
  00078	0a000002	 beq         |$LN27@MenuSelect|

; 218  :             AllFunctionTest_Z2170P(pMenu);

  0007c	e5940000	 ldr         r0, [r4]
  00080	eb000000	 bl          AllFunctionTest_Z2170P
  00084	ea00001c	 b           |$LN92@MenuSelect|
  00088		 |$LN27@MenuSelect|
  00088	e5d82001	 ldrb        r2, [r8, #1]

; 219  :         }else if(matrixStatus(1, 1) ){      //press number 2

  0008c	e3120002	 tst         r2, #2
  00090	1a000040	 bne         |$LN113@MenuSelect|

; 221  :             goto SHOW_MENU; 
; 222  :         }else if(matrixStatus(1, 3) ){      //press number 3

  00094	e3120008	 tst         r2, #8
  00098	1a00003b	 bne         |$LN114@MenuSelect|

; 224  :             goto SHOW_MENU; 
; 225  :         }else if(matrixStatus(2, 1) ){      //press number 4  

  0009c	e3130002	 tst         r3, #2
  000a0	1a000036	 bne         |$LN115@MenuSelect|

; 227  :             goto SHOW_MENU; 
; 228  :         }else if(matrixStatus(2, 4) ){      //press number 5

  000a4	e3130010	 tst         r3, #0x10
  000a8	1a000031	 bne         |$LN116@MenuSelect|

; 230  :             goto SHOW_MENU; 
; 231  :         }else if(matrixStatus(2, 3) ){      //press number 6

  000ac	e3130008	 tst         r3, #8
  000b0	1a00002c	 bne         |$LN117@MenuSelect|
  000b4	e5d82003	 ldrb        r2, [r8, #3]

; 233  :             goto SHOW_MENU; 
; 234  :         }else if(matrixStatus(3, 5) ){      //press number 7

  000b8	e3120020	 tst         r2, #0x20
  000bc	1a000026	 bne         |$LN118@MenuSelect|

; 236  :             goto SHOW_MENU; 
; 237  :         }else if(matrixStatus(2, 0) ){      //press number 8

  000c0	e3130001	 tst         r3, #1
  000c4	1a000021	 bne         |$LN119@MenuSelect|

; 239  :             goto SHOW_MENU; 
; 240  :         }else if(matrixStatus(2, 2) ){      //press number 9

  000c8	e3130004	 tst         r3, #4
  000cc	1a00001c	 bne         |$LN120@MenuSelect|

; 242  :             goto SHOW_MENU; 
; 243  :         }else if(matrixStatus(3, 3) ){      //press F1

  000d0	e3120008	 tst         r2, #8
  000d4	1a000017	 bne         |$LN121@MenuSelect|
  000d8	e5d83004	 ldrb        r3, [r8, #4]

; 245  :             goto SHOW_MENU; 
; 246  :         }else if(matrixStatus(4, 3) ){      //press F2

  000dc	e3130008	 tst         r3, #8
  000e0	1a000011	 bne         |$LN122@MenuSelect|

; 248  :             goto SHOW_MENU; 
; 249  :         }else if(matrixStatus(3, 0) ){      //press F3

  000e4	e3120001	 tst         r2, #1
  000e8	1a00000c	 bne         |$LN123@MenuSelect|

; 251  :             //break;
; 252  :             goto SHOW_MENU; 
; 253  :         }else if(matrixStatus(3, 2) ){      //press F4

  000ec	e3120004	 tst         r2, #4
  000f0	1a000007	 bne         |$LN124@MenuSelect|

; 255  :             //break;
; 256  :             goto SHOW_MENU; 
; 257  :         }else if(matrixStatus(4, 2) ){      //press SP

  000f4	e3130004	 tst         r3, #4
  000f8	1a000002	 bne         |$LN125@MenuSelect|
  000fc		 |$LN92@MenuSelect|

; 259  :             goto SHOW_MENU; 
; 260  :         }                                   //press SP
; 261  :         LcdSleep(500);

  000fc	e3a00f7d	 mov         r0, #0x7D, 30
  00100	eb000000	 bl          LcdSleep

; 262  :                
; 263  :    }

  00104	eaffffc4	 b           |$LL37@MenuSelect|
  00108		 |$LN125@MenuSelect|

; 258  :             RTCFunc(pMenu);

  00108	e5940000	 ldr         r0, [r4]
  0010c	eb000000	 bl          RTCFunc
  00110	eaffffc0	 b           |$SHOW_MENU$47414|
  00114		 |$LN124@MenuSelect|

; 254  :             AutoScanFunc(pMenu);

  00114	e5940000	 ldr         r0, [r4]
  00118	eb000000	 bl          AutoScanFunc
  0011c	eaffffbd	 b           |$SHOW_MENU$47414|
  00120		 |$LN123@MenuSelect|

; 250  :             RAMAccessTest(pMenu);

  00120	e5940000	 ldr         r0, [r4]
  00124	eb000000	 bl          RAMAccessTest
  00128	eaffffba	 b           |$SHOW_MENU$47414|
  0012c		 |$LN122@MenuSelect|

; 247  :             BurnIn_Z2170P(pMenu);

  0012c	e5940000	 ldr         r0, [r4]
  00130	eb000000	 bl          BurnIn_Z2170P
  00134	eaffffb7	 b           |$SHOW_MENU$47414|
  00138		 |$LN121@MenuSelect|

; 244  :             KeypadFunc_Z2170P(pMenu);

  00138	e5940000	 ldr         r0, [r4]
  0013c	eb000000	 bl          KeypadFunc_Z2170P
  00140	eaffffb4	 b           |$SHOW_MENU$47414|
  00144		 |$LN120@MenuSelect|

; 241  :             BarcodeTest_Z2170P(pMenu);

  00144	e5940000	 ldr         r0, [r4]
  00148	eb000000	 bl          BarcodeTest_Z2170P
  0014c	eaffffb1	 b           |$SHOW_MENU$47414|
  00150		 |$LN119@MenuSelect|

; 238  :             LEDTest_Z2170P(pMenu);

  00150	e5940000	 ldr         r0, [r4]
  00154	eb000000	 bl          LEDTest_Z2170P
  00158	eaffffae	 b           |$SHOW_MENU$47414|
  0015c		 |$LN118@MenuSelect|

; 235  :             BatteryTest_Z2170P(pMenu);

  0015c	e5940000	 ldr         r0, [r4]
  00160	eb000000	 bl          BatteryTest_Z2170P
  00164	eaffffab	 b           |$SHOW_MENU$47414|
  00168		 |$LN117@MenuSelect|

; 232  :             TouchPanelTest_Z2170P(pMenu);

  00168	e5940000	 ldr         r0, [r4]
  0016c	eb000000	 bl          TouchPanelTest_Z2170P
  00170	eaffffa8	 b           |$SHOW_MENU$47414|
  00174		 |$LN116@MenuSelect|

; 229  :             KeypadBkTest_Z2170P(pMenu);

  00174	e5940000	 ldr         r0, [r4]
  00178	eb000000	 bl          KeypadBkTest_Z2170P
  0017c	eaffffa5	 b           |$SHOW_MENU$47414|
  00180		 |$LN115@MenuSelect|

; 226  :             DRAMTest_Z2170P(pMenu);

  00180	e5940000	 ldr         r0, [r4]
  00184	eb000000	 bl          DRAMTest_Z2170P
  00188	eaffffa2	 b           |$SHOW_MENU$47414|
  0018c		 |$LN114@MenuSelect|

; 223  :             BkTest_Z2170P(pMenu);

  0018c	e5940000	 ldr         r0, [r4]
  00190	eb000000	 bl          BkTest_Z2170P
  00194	eaffff9f	 b           |$SHOW_MENU$47414|
  00198		 |$LN113@MenuSelect|

; 220  :             DisplayTest_Z2170P(pMenu);

  00198	e5940000	 ldr         r0, [r4]
  0019c	eb000000	 bl          DisplayTest_Z2170P
  001a0	eaffff9c	 b           |$SHOW_MENU$47414|
  001a4		 |$LN145@MenuSelect|
  001a4		 |$LN146@MenuSelect|
  001a4	00000000	 DCD         |??_C@_1DE@MDALDBDK@?$AAH?$AAo?$AAt?$AAK?$AAe?$AAy?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?5?$AA?$FL?$AA?$CF?$AAd?$AA?0?$AA?$CF?$AAd?$AA?$FN?$AA?$AN?$AA?6?$AA?$AA@|
  001a8		 |$LN147@MenuSelect|
  001a8	00000000	 DCD         |gMatrix|
  001ac		 |$LN148@MenuSelect|
  001ac	00000000	 DCD         |pMenu|
  001b0		 |$M47772|

			 ENDP  ; |MenuSelectFunction|

	EXPORT	|HotkeyMenuSelect|

  00000			 AREA	 |.pdata|, PDATA
|$T47788| DCD	|$LN7@HotkeyMenu|
	DCD	0x40000201
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |HotkeyMenuSelect| PROC

; 267  : {

  00000		 |$LN7@HotkeyMenu|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M47785|

; 268  : 	
; 269  : 	UNREFERENCED_PARAMETER(hTwl);
; 270  : 	MenuSelectFunction(hTwl);

  00004	eb000000	 bl          MenuSelectFunction
  00008		 |$LN8@HotkeyMenu|
  00008		 |$LN4@HotkeyMenu|
  00008		 |$M47786|

			 ENDP  ; |HotkeyMenuSelect|

	END
