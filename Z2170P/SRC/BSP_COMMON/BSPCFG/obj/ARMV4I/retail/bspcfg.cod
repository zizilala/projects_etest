; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\Z2170P\SRC\BSP_COMMON\BSPCFG\bspcfg.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|g_dwMeasuredSysClkFreq| [ DATA ]
	EXPORT	|I2CDefaultI2CTimeout| [ DATA ]
	EXPORT	|_rgScaleTable| [ DATA ]
	EXPORT	|_rgI2CDevice| [ DATA ]
	EXPORT	|SupportedNands| [ DATA ]
	EXPORT	|BSPGpioTables| [ DATA ]
	EXPORT	|g_BSP_icL1Level| [ DATA ]

  00000			 AREA	 |.bss|, NOINIT
|gpioNames| %	0x10
|gpioTables| %	0x10
|gpioHandleTable| % 0x10
|gpioRangesTable| % 0x10

  00000			 AREA	 |.data|, DATA
|g_dwMeasuredSysClkFreq| DCD 0xc65d40
|_rgScaleTable| DCW 0x17
	DCW	0xd
	DCW	0xf
	DCW	0x9
	DCW	0x5
	DCW	0x7
	DCW	0x4
	DCW	0x1711
	DCW	0x1913
	DCW	0x4
	DCW	0xd11
	DCW	0xf13
	DCW	0x4
	DCW	0x811
	DCW	0xa13
	%	6
|_rgI2CDevice| DCD 0xc
	DCD	0xe
	DCD	0x1
	DCD	0x5
	DCD	0x5
	DCD	0x5
	%	32
	DCD	0xd
	DCD	0xe
	DCD	0x1
	DCD	0x5
	DCD	0x5
	DCD	0x5
	%	32
	DCD	0xe
	DCD	0xe
	DCD	0x1
	DCD	0x5
	DCD	0x3c
	DCD	0x3c
	%	32
	DCD	0xffffffff
	%	52
|SupportedNands| DCB 0x2c
	DCB	0xba
	%	2
	DCD	0x800
	DCD	0x40
	DCD	0x800
	DCD	0x2
	DCB	0x2c
	DCB	0xbc
	%	2
	DCD	0x1000
	DCD	0x40
	DCD	0x800
	DCD	0x2
	DCB	0xad
	DCB	0xbc
	%	2
	DCD	0x1000
	DCD	0x40
	DCD	0x800
	DCD	0x2
|BSPGpioTables| DCD 0x0
	DCD	0x0
	DCD	|gpioRangesTable|
	DCD	|gpioHandleTable|
	DCD	|gpioTables|
	DCD	|gpioNames|

  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
|debugUartCfg| DCD 0x3d
	DCD	0x3
	DCD	0x1a
	DCD	0x0
|I2CDefaultI2CTimeout| DCD 0x1f4
	%	4
|g_BSP_icL1Level| DCD 0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x4
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	DCD	0x40
	EXPORT	|BSPGetDebugUARTConfig|
; File c:\wince600\platform\z2170p\src\bsp_common\bspcfg\bspcfg.c

  00000			 AREA	 |.pdata|, PDATA
|$T47572| DCD	|$LN5@BSPGetDebu|
	DCD	0x40000300
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |BSPGetDebugUARTConfig| PROC

; 40   : {

  00000		 |$LN5@BSPGetDebu|
  00000		 |$M47569|

; 41   :     return &debugUartCfg;

  00000	e59f0000	 ldr         r0, [pc]

; 42   : }

  00004	e12fff1e	 bx          lr
  00008		 |$LN6@BSPGetDebu|
  00008		 |$LN7@BSPGetDebu|
  00008	00000000	 DCD         |debugUartCfg|
  0000c		 |$M47570|

			 ENDP  ; |BSPGetDebugUARTConfig|

	EXPORT	|BSPGetNandIrqWait|

  00000			 AREA	 |.pdata|, PDATA
|$T47583| DCD	|$LN5@BSPGetNand|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |BSPGetNandIrqWait| PROC

; 111  : {

  00000		 |$LN5@BSPGetNand|
  00000		 |$M47580|

; 112  :     return BSP_GPMC_IRQ_WAIT_EDGE;

  00000	e3a00c01	 mov         r0, #1, 24

; 113  : }

  00004	e12fff1e	 bx          lr
  00008		 |$M47581|

			 ENDP  ; |BSPGetNandIrqWait|

	EXPORT	|BSPGetNandCS|

  00000			 AREA	 |.pdata|, PDATA
|$T47592| DCD	|$LN5@BSPGetNand@2|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |BSPGetNandCS| PROC

; 116  : {

  00000		 |$LN5@BSPGetNand@2|
  00000		 |$M47589|

; 117  :     return BSP_GPMC_NAND_CS;

  00000	e3a00000	 mov         r0, #0

; 118  : }

  00004	e12fff1e	 bx          lr
  00008		 |$M47590|

			 ENDP  ; |BSPGetNandCS|

	EXPORT	|BSPGetNandInfo|
	EXPORT	|??_C@_1HI@JDGLDLD@?$AAN?$AAA?$AAN?$AAD?$AA?5?$AAm?$AAa?$AAn?$AAu?$AAf?$AAa?$AAc?$AAt?$AAu?$AAr?$AAe?$AAr?$AA?5?$AA?$CF?$AAx?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AA?$CF?$AAx?$AA?5?$AA?3@| [ DATA ] ; `string'
	IMPORT	|NKDbgPrintfW|

  00000			 AREA	 |.pdata|, PDATA
|$T47608| DCD	|$LN13@BSPGetNand@3|
	DCD	0x40001c01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HI@JDGLDLD@?$AAN?$AAA?$AAN?$AAD?$AA?5?$AAm?$AAa?$AAn?$AAu?$AAf?$AAa?$AAc?$AAt?$AAu?$AAr?$AAe?$AAr?$AA?5?$AA?$CF?$AAx?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AA?$CF?$AAx?$AA?5?$AA?3@| DCB "N"
	DCB	0x0, "A", 0x0, "N", 0x0, "D", 0x0, " ", 0x0, "m", 0x0, "a"
	DCB	0x0, "n", 0x0, "u", 0x0, "f", 0x0, "a", 0x0, "c", 0x0, "t"
	DCB	0x0, "u", 0x0, "r", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "%"
	DCB	0x0, "x", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "x", 0x0, " "
	DCB	0x0, ":", 0x0, " ", 0x0, "n", 0x0, "o", 0x0, " ", 0x0, "m"
	DCB	0x0, "a", 0x0, "t", 0x0, "c", 0x0, "h", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "u"
	DCB	0x0, "n", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |BSPGetNandInfo| PROC

; 121  : {

  00000		 |$LN13@BSPGetNand@3|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M47605|
  00004	e1a05000	 mov         r5, r0

; 122  :     int i;    
; 123  :     for (i=0;i< dimof(SupportedNands);i++)

  00008	e59f405c	 ldr         r4, [pc, #0x5C]
  0000c	e3a02000	 mov         r2, #0
  00010	e1a0e004	 mov         lr, r4
  00014		 |$LL4@BSPGetNand@3|

; 124  :     {
; 125  :         if ((SupportedNands[i].manufacturerId == manufacturer) && (SupportedNands[i].deviceId == device))

  00014	e5de3000	 ldrb        r3, [lr]
  00018	e1530005	 cmp         r3, r5
  0001c	1a000002	 bne         |$LN3@BSPGetNand@3|
  00020	e5de3001	 ldrb        r3, [lr, #1]
  00024	e1530001	 cmp         r3, r1
  00028	0a00000a	 beq         |$LN8@BSPGetNand@3|
  0002c		 |$LN3@BSPGetNand@3|

; 122  :     int i;    
; 123  :     for (i=0;i< dimof(SupportedNands);i++)

  0002c	e2822001	 add         r2, r2, #1
  00030	e3520003	 cmp         r2, #3
  00034	e28ee014	 add         lr, lr, #0x14
  00038	3afffff5	 bcc         |$LL4@BSPGetNand@3|

; 130  :         }
; 131  :     }
; 132  :     RETAILMSG(1,(TEXT("NAND manufacturer %x device %x : no matching device found\r\n"),manufacturer,device));    

  0003c	e59f0024	 ldr         r0, [pc, #0x24]
  00040	e1a02001	 mov         r2, r1
  00044	e1a01005	 mov         r1, r5
  00048	eb000000	 bl          NKDbgPrintfW

; 133  :     return NULL;

  0004c	e3a00000	 mov         r0, #0

; 134  : }

  00050	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$LN8@BSPGetNand@3|

; 126  :         {
; 127  :         	//RETAILMSG(1,(TEXT("NAND manufacturer ID: 0x%x  device ID: 0x%x\r\n"),manufacturer,device));
; 128  :             //OALLog(L"XXX\r\n");
; 129  :             return &SupportedNands[i];            

  00058	e0823102	 add         r3, r2, r2, lsl #2
  0005c	e0840103	 add         r0, r4, r3, lsl #2

; 134  : }

  00060	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00064	e12fff1e	 bx          lr
  00068		 |$LN14@BSPGetNand@3|
  00068		 |$LN15@BSPGetNand@3|
  00068	00000000	 DCD         |??_C@_1HI@JDGLDLD@?$AAN?$AAA?$AAN?$AAD?$AA?5?$AAm?$AAa?$AAn?$AAu?$AAf?$AAa?$AAc?$AAt?$AAu?$AAr?$AAe?$AAr?$AA?5?$AA?$CF?$AAx?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AA?$CF?$AAx?$AA?5?$AA?3@|
  0006c		 |$LN16@BSPGetNand@3|
  0006c	00000000	 DCD         |SupportedNands|
  00070		 |$M47606|

			 ENDP  ; |BSPGetNandInfo|

	EXPORT	|BSPInsertGpioDevice|

  00000			 AREA	 |.pdata|, PDATA
|$T47624| DCD	|$LN6@BSPInsertG|
	DCD	0x40001501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |BSPInsertGpioDevice| PROC

; 157  : {

  00000		 |$LN6@BSPInsertG|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M47621|
  00004	e1a05000	 mov         r5, r0

; 158  :     int index = BSPGpioTables.nbGpioGrp;

  00008	e59fe040	 ldr         lr, [pc, #0x40]
  0000c	e59e4004	 ldr         r4, [lr, #4]

; 159  :     if (index >= NB_GPIO_GRP) return FALSE;

  00010	e3540004	 cmp         r4, #4
  00014	a3a00000	 movge       r0, #0

; 165  : }

  00018	a8bd4030	 ldmgeia     sp!, {r4, r5, lr}
  0001c	a12fff1e	 bxge        lr

; 160  :     BSPGpioTables.rgRanges[index] = range;

  00020	e59e3008	 ldr         r3, [lr, #8]

; 161  :     BSPGpioTables.rgGpioTbls[index] = fnTbl;
; 162  :     BSPGpioTables.name[index] = name;
; 163  :     BSPGpioTables.nbGpioGrp++;
; 164  :     return TRUE;

  00024	e3a00001	 mov         r0, #1
  00028	e7835104	 str         r5, [r3, +r4, lsl #2]
  0002c	e59e3010	 ldr         r3, [lr, #0x10]
  00030	e7831104	 str         r1, [r3, +r4, lsl #2]
  00034	e59e3014	 ldr         r3, [lr, #0x14]
  00038	e7832104	 str         r2, [r3, +r4, lsl #2]
  0003c	e59e3004	 ldr         r3, [lr, #4]
  00040	e2833001	 add         r3, r3, #1
  00044	e58e3004	 str         r3, [lr, #4]

; 165  : }

  00048	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$LN7@BSPInsertG|
  00050		 |$LN8@BSPInsertG|
  00050	00000000	 DCD         |BSPGpioTables|
  00054		 |$M47622|

			 ENDP  ; |BSPInsertGpioDevice|

	EXPORT	|BSPGetGpioDevicesTable|

  00000			 AREA	 |.pdata|, PDATA
|$T47635| DCD	|$LN5@BSPGetGpio|
	DCD	0x40000300
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |BSPGetGpioDevicesTable| PROC

; 168  : {

  00000		 |$LN5@BSPGetGpio|
  00000		 |$M47632|

; 169  :     return &BSPGpioTables;

  00000	e59f0000	 ldr         r0, [pc]

; 170  : }

  00004	e12fff1e	 bx          lr
  00008		 |$LN6@BSPGetGpio|
  00008		 |$LN7@BSPGetGpio|
  00008	00000000	 DCD         |BSPGpioTables|
  0000c		 |$M47633|

			 ENDP  ; |BSPGetGpioDevicesTable|

	EXPORT	|BSPGetGpioIrq|

  00000			 AREA	 |.pdata|, PDATA
|$T47647| DCD	|$LN5@BSPGetGpio@2|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |BSPGetGpioIrq| PROC

; 172  : {

  00000		 |$LN5@BSPGetGpio@2|
  00000		 |$M47644|

; 173  :     return id + IRQ_GPIO_0;

  00000	e2800080	 add         r0, r0, #0x80

; 174  : }

  00004	e12fff1e	 bx          lr
  00008		 |$M47645|

			 ENDP  ; |BSPGetGpioIrq|

	EXPORT	|BSPGetTritonBusID|

  00000			 AREA	 |.pdata|, PDATA
|$T47656| DCD	|$LN5@BSPGetTrit|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |BSPGetTritonBusID| PROC

; 182  : {

  00000		 |$LN5@BSPGetTrit|
  00000		 |$M47653|

; 183  :     return TPS659XX_I2C_BUS_ID;

  00000	e3a0000c	 mov         r0, #0xC

; 184  : }

  00004	e12fff1e	 bx          lr
  00008		 |$M47654|

			 ENDP  ; |BSPGetTritonBusID|

	EXPORT	|BSPGetTritonSlaveAddress|

  00000			 AREA	 |.pdata|, PDATA
|$T47665| DCD	|$LN5@BSPGetTrit@2|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |BSPGetTritonSlaveAddress| PROC

; 187  : {

  00000		 |$LN5@BSPGetTrit@2|
  00000		 |$M47662|

; 188  :     return TPS659XX_I2C_SLAVE_ADDRESS;

  00000	e3a00048	 mov         r0, #0x48

; 189  : }

  00004	e12fff1e	 bx          lr
  00008		 |$M47663|

			 ENDP  ; |BSPGetTritonSlaveAddress|

	EXPORT	|BSPGetSDHCCardDetect|

  00000			 AREA	 |.pdata|, PDATA
|$T47675| DCD	|$LN9@BSPGetSDHC|
	DCD	0x40000400
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |BSPGetSDHCCardDetect| PROC

; 195  : {

  00000		 |$LN9@BSPGetSDHC|
  00000		 |$M47672|

; 196  :     switch (slot)

  00000	e3500001	 cmp         r0, #1

; 199  : 			default: return (DWORD) -1;

  00004	13e00000	 mvnne       r0, #0

; 197  :     {
; 198  : 		case 1: return MMC1_CARDDET_GPIO;

  00008	03a00c01	 moveq       r0, #1, 24

; 200  :     }
; 201  : }

  0000c	e12fff1e	 bx          lr
  00010		 |$M47673|

			 ENDP  ; |BSPGetSDHCCardDetect|

	EXPORT	|BSPGetSysTimerDevice|

  00000			 AREA	 |.pdata|, PDATA
|$T47684| DCD	|$LN5@BSPGetSysT|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |BSPGetSysTimerDevice| PROC

; 267  : {

  00000		 |$LN5@BSPGetSysT|
  00000		 |$M47681|

; 268  :     return OMAP_DEVICE_GPTIMER1;

  00000	e3a00024	 mov         r0, #0x24

; 269  : }

  00004	e12fff1e	 bx          lr
  00008		 |$M47682|

			 ENDP  ; |BSPGetSysTimerDevice|

	EXPORT	|BSPGetSysTimer32KClock|

  00000			 AREA	 |.pdata|, PDATA
|$T47693| DCD	|$LN5@BSPGetSysT@2|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |BSPGetSysTimer32KClock| PROC

; 272  : {

  00000		 |$LN5@BSPGetSysT@2|
  00000		 |$M47690|

; 273  :     return k32K_FCLK;

  00000	e3a0000b	 mov         r0, #0xB

; 274  : }

  00004	e12fff1e	 bx          lr
  00008		 |$M47691|

			 ENDP  ; |BSPGetSysTimer32KClock|

	EXPORT	|BSPGetGPTPerfDevice|

  00000			 AREA	 |.pdata|, PDATA
|$T47702| DCD	|$LN5@BSPGetGPTP|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |BSPGetGPTPerfDevice| PROC

; 280  : {

  00000		 |$LN5@BSPGetGPTP|
  00000		 |$M47699|

; 281  :     return OMAP_DEVICE_GPTIMER2;

  00000	e3a00035	 mov         r0, #0x35

; 282  : }

  00004	e12fff1e	 bx          lr
  00008		 |$M47700|

			 ENDP  ; |BSPGetGPTPerfDevice|

	EXPORT	|BSPGetGPTPerfHighFreqClock|

  00000			 AREA	 |.pdata|, PDATA
|$T47712| DCD	|$LN5@BSPGetGPTP@2|
	DCD	0x40000700
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |BSPGetGPTPerfHighFreqClock| PROC

; 285  : {

  00000		 |$LN5@BSPGetGPTP@2|
  00000		 |$M47709|
  00000	e1a02000	 mov         r2, r0

; 286  : #if 1
; 287  :     //use SYS CLK as the timer source. better precision but cause CETK to fail because of the drift with the 32K clock
; 288  :     *pFreq = (UINT32) g_dwMeasuredSysClkFreq;        

  00004	e59f300c	 ldr         r3, [pc, #0xC]

; 289  :     return kSYS_CLK;

  00008	e3a0000c	 mov         r0, #0xC
  0000c	e5933000	 ldr         r3, [r3]
  00010	e5823000	 str         r3, [r2]

; 290  : #else
; 291  :    //use 32K CLK as the timer source.
; 292  :     *pFreq = 32768;
; 293  :     return k32K_FCLK;
; 294  : #endif
; 295  : }

  00014	e12fff1e	 bx          lr
  00018		 |$LN6@BSPGetGPTP@2|
  00018		 |$LN7@BSPGetGPTP@2|
  00018	00000000	 DCD         |g_dwMeasuredSysClkFreq|
  0001c		 |$M47710|

			 ENDP  ; |BSPGetGPTPerfHighFreqClock|

	EXPORT	|BSPGetRTCGpioIrq|

  00000			 AREA	 |.pdata|, PDATA
|$T47723| DCD	|$LN5@BSPGetRTCG|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |BSPGetRTCGpioIrq| PROC

; 300  : {

  00000		 |$LN5@BSPGetRTCG|
  00000		 |$M47720|

; 301  :     return (DWORD)-1;//BSPGetGpioIrq(RTC_IRQ_GPIO);

  00000	e3e00000	 mvn         r0, #0

; 302  : }

  00004	e12fff1e	 bx          lr
  00008		 |$M47721|

			 ENDP  ; |BSPGetRTCGpioIrq|

	EXPORT	|BPSGetWatchdogDevice|

  00000			 AREA	 |.pdata|, PDATA
|$T47732| DCD	|$LN5@BPSGetWatc|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |BPSGetWatchdogDevice| PROC

; 308  : {

  00000		 |$LN5@BPSGetWatc|
  00000		 |$M47729|

; 309  :     return OMAP_DEVICE_WDT2;

  00000	e3a00028	 mov         r0, #0x28

; 310  : }

  00004	e12fff1e	 bx          lr
  00008		 |$M47730|

			 ENDP  ; |BPSGetWatchdogDevice|

	END
